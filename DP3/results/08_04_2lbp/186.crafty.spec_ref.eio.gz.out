sim-outorder: SimpleScalar/Alpha Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 4
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 73.6227
Branch Predictor Power Consumption: 3.33775  (4.66%)
 branch target buffer power (W): 2.49493
 local predict power (W): 0.576035
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.417965  (0.584%)
 Instruction Decode Power (W): 0.0159915
 RAT decode_power (W): 0.113514
 RAT wordline_power (W): 0.0307815
 RAT bitline_power (W): 0.246771
 DCL Comparators (W): 0.0109075
Instruction Window Power Consumption: 2.20432  (3.08%)
 tagdrive (W): 0.0943488
 tagmatch (W): 0.033695
 Selection Logic (W): 0.0134217
 decode_power (W): 0.0532503
 wordline_power (W): 0.0844643
 bitline_power (W): 1.92514
Load/Store Queue Power Consumption: 0.96318  (1.34%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.382166
Arch. Register File Power Consumption: 3.57247  (4.99%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 2.29754  (3.21%)
Total Clock Power: 27.314  (38.1%)
Int ALU Power: 4.66013  (6.51%)
FP ALU Power: 14.281  (19.9%)
Instruction Cache Power Consumption: 2.76773  (3.86%)
 decode_power (W): 0.151353
 wordline_power (W): 0.180479
 bitline_power (W): 1.42251
 senseamp_power (W): 0.768
 tagarray_power (W): 0.245382
Itlb_power (W): 0.264834 (0.37%)
Data Cache Power Consumption: 5.53546  (7.73%)
 decode_power (W): 0.302705
 wordline_power (W): 0.360958
 bitline_power (W): 2.84503
 senseamp_power (W): 1.536
 tagarray_power (W): 0.490764
Dtlb_power (W): 0.903238 (1.26%)
Level 2 Cache Power Consumption: 3.10298 (4.33%)
 decode_power (W): 0.19487
 wordline_power (W): 0.0430878
 bitline_power (W): 1.77274
 senseamp_power (W): 0.192
 tagarray_power (W): 0.900275
sim: loading EIO file: ../benchmarks/186.crafty.spec_ref.eio.gz
sim: command line: ./sim-outorder -config ../configs/current.config ../benchmarks/186.crafty.spec_ref.eio.gz 

sim: simulation started @ Mon Nov 23 20:06:23 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     ../results/08_04_2lbp/186.crafty.spec_ref.eio.gz.out # redirect simulator output to file (non-interactive only)
# -redir:prog       /dev/null # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-freq            600000000.0000 # frequency             
-max:inst           100000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                   2lev # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 16384 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:32:64:8:f # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       dl2:256:64:8:f # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               2 # l2 data cache hit latency (in cycles)
-cache:il1       il1:32:64:8:f # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               2 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         103 1 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn              100000003 # total number of instructions committed
sim_num_refs               36952286 # total number of loads and stores committed
sim_num_loads              31583999 # total number of loads committed
sim_num_stores         5368287.0000 # total number of stores committed
sim_num_branches           11073363 # total number of branches committed
sim_elapsed_time                113 # total simulation time in seconds
sim_inst_rate           884955.7788 # simulation speed (in insts/sec)
sim_total_insn            105447258 # total number of instructions executed
sim_total_refs             39013363 # total number of loads and stores executed
sim_total_loads            33468086 # total number of loads executed
sim_total_stores       5545277.0000 # total number of stores executed
sim_total_branches         11842548 # total number of branches executed
sim_cycle                  68190286 # total simulation time in cycles
sim_IPC                      1.4665 # instructions per cycle
sim_CPI                      0.6819 # cycles per instruction
sim_exec_BW                  1.5464 # total instructions (mis-spec + committed) per cycle
sim_IPB                      9.0307 # instruction per branch
IFQ_count                 223900614 # cumulative IFQ occupancy
IFQ_fcount                 52169413 # cumulative IFQ full count
ifq_occupancy                3.2835 # avg IFQ occupancy (insn's)
ifq_rate                     1.5464 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  2.1233 # avg IFQ occupant latency (cycle's)
ifq_full                     0.7651 # fraction of time (cycle's) IFQ was full
RUU_count                 860035432 # cumulative RUU occupancy
RUU_fcount                 34041506 # cumulative RUU full count
ruu_occupancy               12.6123 # avg RUU occupancy (insn's)
ruu_rate                     1.5464 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  8.1561 # avg RUU occupant latency (cycle's)
ruu_full                     0.4992 # fraction of time (cycle's) RUU was full
LSQ_count                 308347574 # cumulative LSQ occupancy
LSQ_fcount                 11584823 # cumulative LSQ full count
lsq_occupancy                4.5219 # avg LSQ occupancy (insn's)
lsq_rate                     1.5464 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  2.9242 # avg LSQ occupant latency (cycle's)
lsq_full                     0.1699 # fraction of time (cycle's) LSQ was full
sim_slip                 1273252048 # total number of slip cycles
avg_sim_slip                12.7325 # the average slip between issue and retirement
bpred_2lev.lookups         12125189 # total number of bpred lookups
bpred_2lev.updates         11073363 # total number of updates
bpred_2lev.addr_hits       10407778 # total number of address-predicted hits
bpred_2lev.dir_hits        10521339 # total number of direction-predicted hits (includes addr-hits)
bpred_2lev.misses            552024 # total number of misses
bpred_2lev.jr_hits          1116309 # total number of address-predicted hits for JR's
bpred_2lev.jr_seen          1228183 # total number of JR's seen
bpred_2lev.jr_non_ras_hits.PP        98281 # total number of address-predicted hits for non-RAS JR's
bpred_2lev.jr_non_ras_seen.PP       202725 # total number of non-RAS JR's seen
bpred_2lev.bpred_addr_rate    0.9399 # branch address-prediction rate (i.e., addr-hits/updates)
bpred_2lev.bpred_dir_rate    0.9501 # branch direction-prediction rate (i.e., all-hits/updates)
bpred_2lev.bpred_jr_rate    0.9089 # JR address-prediction rate (i.e., JR addr-hits/JRs seen)
bpred_2lev.bpred_jr_non_ras_rate.PP    0.4848 # non-RAS JR addr-pred rate (ie, non-RAS JR hits/JRs seen)
bpred_2lev.retstack_pushes      1129521 # total number of address pushed onto ret-addr stack
bpred_2lev.retstack_pops      1165362 # total number of address popped off of ret-addr stack
bpred_2lev.used_ras.PP      1025458 # total number of RAS predictions used
bpred_2lev.ras_hits.PP      1018028 # total number of RAS hits
bpred_2lev.ras_rate.PP    0.9928 # RAS prediction rate (i.e., RAS hits/used RAS)
il1.accesses              109262172 # total number of accesses
il1.hits                  107547338 # total number of hits
il1.misses                  1714834 # total number of misses
il1.replacements            1714578 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0157 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0157 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               37649689 # total number of accesses
dl1.hits                   35868634 # total number of hits
dl1.misses                  1781055 # total number of misses
dl1.replacements            1780799 # total number of replacements
dl1.writebacks               200039 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0473 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0473 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0053 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl2.accesses                3695928 # total number of accesses
dl2.hits                    3535505 # total number of hits
dl2.misses                   160423 # total number of misses
dl2.replacements             158375 # total number of replacements
dl2.writebacks                12877 # total number of writebacks
dl2.invalidations                 0 # total number of invalidations
dl2.miss_rate                0.0434 # miss rate (i.e., misses/ref)
dl2.repl_rate                0.0429 # replacement rate (i.e., repls/ref)
dl2.wb_rate                  0.0035 # writeback rate (i.e., wrbks/ref)
dl2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             109262172 # total number of accesses
itlb.hits                 109262144 # total number of hits
itlb.misses                      28 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses              37702241 # total number of accesses
dtlb.hits                  37345133 # total number of hits
dtlb.misses                  357108 # total number of misses
dtlb.replacements            356980 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0095 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0095 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           28501186.0734 # total power usage of rename unit
bpred_power            227602317.8609 # total power usage of bpred unit
window_power           150313171.5244 # total power usage of instruction window
lsq_power              65679518.9082 # total power usage of load/store queue
regfile_power          243607894.3662 # total power usage of arch. regfile
icache_power           206791342.2471 # total power usage of icache
dcache_power           439056507.2031 # total power usage of dcache
dcache2_power          211592873.3816 # total power usage of dcache2
alu_power              1291604170.1601 # total power usage of alu
falu_power             973828540.0632 # total power usage of falu
resultbus_power        156670106.6083 # total power usage of resultbus
clock_power            1862551232.7416 # total power usage of clock
avg_rename_power             0.4180 # avg power usage of rename unit
avg_bpred_power              3.3378 # avg power usage of bpred unit
avg_window_power             2.2043 # avg power usage of instruction window
avg_lsq_power                0.9632 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             3.0326 # avg power usage of icache
avg_dcache_power             6.4387 # avg power usage of dcache
avg_dcache2_power            3.1030 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          2.2975 # avg power usage of resultbus
avg_clock_power             27.3140 # avg power usage of clock
fetch_stage_power      434393660.1080 # total power usage of fetch stage
dispatch_stage_power   28501186.0734 # total power usage of dispatch stage
issue_stage_power      2314916347.7857 # total power usage of issue stage
avg_fetch_power              6.3703 # average power of fetch unit per cycle
avg_dispatch_power           0.4180 # average power of dispatch unit per cycle
avg_issue_power             33.9479 # average power of issue unit per cycle
total_power            4883970321.0749 # total power per cycle
avg_total_power_cycle       71.6227 # average total power per cycle
avg_total_power_cycle_nofp_nod2      54.2386 # average total power per cycle
avg_total_power_insn        46.3167 # average total power per insn
avg_total_power_insn_nofp_nod2      35.0749 # average total power per insn
rename_power_cc1       15288116.7060 # total power usage of rename unit_cc1
bpred_power_cc1        33353194.1199 # total power usage of bpred unit_cc1
window_power_cc1       101257931.5476 # total power usage of instruction window_cc1
lsq_power_cc1          14305416.7139 # total power usage of lsq_cc1
regfile_power_cc1      125161576.7093 # total power usage of arch. regfile_cc1
icache_power_cc1       116707470.5038 # total power usage of icache_cc1
dcache_power_cc1       168446780.0398 # total power usage of dcache_cc1
dcache2_power_cc1      10506103.7486 # total power usage of dcache2_cc1
alu_power_cc1          194451854.1858 # total power usage of alu_cc1
resultbus_power_cc1    94353823.8422 # total power usage of resultbus_cc1
clock_power_cc1        564907137.2997 # total power usage of clock_cc1
avg_rename_power_cc1         0.2242 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.4891 # avg power usage of bpred unit_cc1
avg_window_power_cc1         1.4849 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.2098 # avg power usage of lsq_cc1
avg_regfile_power_cc1        1.8355 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.7115 # avg power usage of icache_cc1
avg_dcache_power_cc1         2.4702 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.1541 # avg power usage of dcache2_cc1
avg_alu_power_cc1            2.8516 # avg power usage of alu_cc1
avg_resultbus_power_cc1       1.3837 # avg power usage of resultbus_cc1
avg_clock_power_cc1          8.2843 # avg power usage of clock_cc1
fetch_stage_power_cc1  150060664.6237 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 15288116.7060 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  583321910.0780 # total power usage of issue stage_cc1
avg_fetch_power_cc1          2.2006 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.2242 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          8.5543 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  1438739405.4166 # total power per cycle_cc1
avg_total_power_cycle_cc1      21.0989 # average total power per cycle_cc1
avg_total_power_insn_cc1      13.6442 # average total power per insn_cc1
rename_power_cc2       11018328.6271 # total power usage of rename unit_cc2
bpred_power_cc2        18480074.1847 # total power usage of bpred unit_cc2
window_power_cc2       86741695.4644 # total power usage of instruction window_cc2
lsq_power_cc2          9925697.9125 # total power usage of lsq_cc2
regfile_power_cc2      40554326.6138 # total power usage of arch. regfile_cc2
icache_power_cc2       116707470.5038 # total power usage of icache_cc2
dcache_power_cc2       121207446.9354 # total power usage of dcache_cc2
dcache2_power_cc2      5734189.3680 # total power usage of dcache2_cc2
alu_power_cc2          119734417.0994 # total power usage of alu_cc2
resultbus_power_cc2    66455868.9172 # total power usage of resultbus_cc2
clock_power_cc2        386379479.4321 # total power usage of clock_cc2
avg_rename_power_cc2         0.1616 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.2710 # avg power usage of bpred unit_cc2
avg_window_power_cc2         1.2721 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.1456 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.5947 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.7115 # avg power usage of icache_cc2
avg_dcache_power_cc2         1.7775 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0841 # avg power usage of dcache2_cc2
avg_alu_power_cc2            1.7559 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.9746 # avg power usage of resultbus_cc2
avg_clock_power_cc2          5.6662 # avg power usage of clock_cc2
fetch_stage_power_cc2  135187544.6885 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 11018328.6271 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  409799315.6969 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.9825 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.1616 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          6.0096 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  982938995.0584 # total power per cycle_cc2
avg_total_power_cycle_cc2      14.4146 # average total power per cycle_cc2
avg_total_power_insn_cc2       9.3216 # average total power per insn_cc2
rename_power_cc3       12339635.5568 # total power usage of rename unit_cc3
bpred_power_cc3        37905319.2537 # total power usage of bpred unit_cc3
window_power_cc3       91546359.2076 # total power usage of instruction window_cc3
lsq_power_cc3          15041640.0952 # total power usage of lsq_cc3
regfile_power_cc3      50710134.6064 # total power usage of arch. regfile_cc3
icache_power_cc3       125715857.6245 # total power usage of icache_cc3
dcache_power_cc3       148551680.7451 # total power usage of dcache_cc3
dcache2_power_cc3      25846408.8224 # total power usage of dcache2_cc3
alu_power_cc3          229449648.2073 # total power usage of alu_cc3
resultbus_power_cc3    72086530.1257 # total power usage of resultbus_cc3
clock_power_cc3        514756660.1825 # total power usage of clock_cc3
avg_rename_power_cc3         0.1810 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.5559 # avg power usage of bpred unit_cc3
avg_window_power_cc3         1.3425 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.2206 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.7437 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.8436 # avg power usage of icache_cc3
avg_dcache_power_cc3         2.1785 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.3790 # avg power usage of dcache2_cc3
avg_alu_power_cc3            3.3648 # avg power usage of alu_cc3
avg_resultbus_power_cc3       1.0571 # avg power usage of resultbus_cc3
avg_clock_power_cc3          7.5488 # avg power usage of clock_cc3
fetch_stage_power_cc3  163621176.8782 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 12339635.5568 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  582522267.2033 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.3995 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.1810 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          8.5426 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  1323949874.4272 # total power per cycle_cc3
avg_total_power_cycle_cc3      19.4155 # average total power per cycle_cc3
avg_total_power_insn_cc3      12.5556 # average total power per insn_cc3
total_rename_access       105447258 # total number accesses of rename unit
total_bpred_access         11073363 # total number accesses of bpred unit
total_window_access       408802071 # total number accesses of instruction window
total_lsq_access           37800100 # total number accesses of load/store queue
total_regfile_access      155224117 # total number accesses of arch. regfile
total_icache_access       109290218 # total number accesses of icache
total_dcache_access        37649689 # total number accesses of dcache
total_dcache2_access        3695928 # total number accesses of dcache2
total_alu_access          102713491 # total number accesses of alu
total_resultbus_access    123412295 # total number accesses of resultbus
avg_rename_access            1.5464 # avg number accesses of rename unit
avg_bpred_access             0.1624 # avg number accesses of bpred unit
avg_window_access            5.9950 # avg number accesses of instruction window
avg_lsq_access               0.5543 # avg number accesses of lsq
avg_regfile_access           2.2763 # avg number accesses of arch. regfile
avg_icache_access            1.6027 # avg number accesses of icache
avg_dcache_access            0.5521 # avg number accesses of dcache
avg_dcache2_access           0.0542 # avg number accesses of dcache2
avg_alu_access               1.5063 # avg number accesses of alu
avg_resultbus_access         1.8098 # avg number accesses of resultbus
max_rename_access                 4 # max number accesses of rename unit
max_bpred_access                  3 # max number accesses of bpred unit
max_window_access                17 # max number accesses of instruction window
max_lsq_access                    5 # max number accesses of load/store queue
max_regfile_access               12 # max number accesses of arch. regfile
max_icache_access                 4 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                6 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              7 # max number accesses of resultbus
max_cycle_power_cc1         49.6863 # maximum cycle power usage of cc1
max_cycle_power_cc2         34.6271 # maximum cycle power usage of cc2
max_cycle_power_cc3         37.9642 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                 442368 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size                1163616 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x0120013300 # program entry point (initial PC)
ld_environ_base        0x011ff96170 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  306 # total number of pages allocated
mem.page_mem                  2448k # total size of memory pages allocated
mem.ptab_misses              563392 # total first level page table misses
mem.ptab_accesses         704377088 # total page table accesses
mem.ptab_miss_rate           0.0008 # first level page table miss rate

