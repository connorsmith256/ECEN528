sim-outorder: SimpleScalar/Alpha Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 4
Window Size: 16
Number of Virtual Registers: 32
Number of Physical Registers: 16
Datapath Width: 64
Total Power Consumption: 45.994
Branch Predictor Power Consumption: 3.33649  (7.58%)
 branch target buffer power (W): 2.49493
 local predict power (W): 0.574771
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.417965  (0.95%)
 Instruction Decode Power (W): 0.0159915
 RAT decode_power (W): 0.113514
 RAT wordline_power (W): 0.0307815
 RAT bitline_power (W): 0.246771
 DCL Comparators (W): 0.0109075
Instruction Window Power Consumption: 2.20432  (5.01%)
 tagdrive (W): 0.0943488
 tagmatch (W): 0.033695
 Selection Logic (W): 0.0134217
 decode_power (W): 0.0532503
 wordline_power (W): 0.0844643
 bitline_power (W): 1.92514
Load/Store Queue Power Consumption: 0.4302  (0.978%)
 tagdrive (W): 0.220308
 tagmatch (W): 0.0487252
 decode_power (W): 0.00399788
 wordline_power (W): 0.00584427
 bitline_power (W): 0.151325
Arch. Register File Power Consumption: 3.57247  (8.12%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 0.885119  (2.01%)
Total Clock Power: 19.0573  (43.3%)
Int ALU Power: 1.16503  (2.65%)
FP ALU Power: 3.57026  (8.12%)
Instruction Cache Power Consumption: 2.76773  (6.29%)
 decode_power (W): 0.151353
 wordline_power (W): 0.180479
 bitline_power (W): 1.42251
 senseamp_power (W): 0.768
 tagarray_power (W): 0.245382
Itlb_power (W): 0.264834 (0.602%)
Data Cache Power Consumption: 2.76773  (6.29%)
 decode_power (W): 0.151353
 wordline_power (W): 0.180479
 bitline_power (W): 1.42251
 senseamp_power (W): 0.768
 tagarray_power (W): 0.245382
Dtlb_power (W): 0.451619 (1.03%)
Level 2 Cache Power Consumption: 3.10298 (7.05%)
 decode_power (W): 0.19487
 wordline_power (W): 0.0430878
 bitline_power (W): 1.77274
 senseamp_power (W): 0.192
 tagarray_power (W): 0.900275
sim: loading EIO file: ../benchmarks/164.gzip.log-ref.eio.gz
sim: command line: ./sim-outorder -config ../configs/current.config ../benchmarks/164.gzip.log-ref.eio.gz 

sim: simulation started @ Mon Nov 23 20:40:58 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     ../results/11_01_min_fus/164.gzip.log-ref.eio.gz.out # redirect simulator output to file (non-interactive only)
# -redir:prog       /dev/null # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-freq            600000000.0000 # frequency             
-max:inst           100000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat                3 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 16384 4 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  16 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:32:64:8:f # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       dl2:256:64:8:f # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               2 # l2 data cache hit latency (in cycles)
-cache:il1       il1:32:64:8:f # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               2 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         103 1 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   1 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                1 # total number of memory system ports available (to CPU)
-res:fpalu                  1 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn              100000000 # total number of instructions committed
sim_num_refs               29770709 # total number of loads and stores committed
sim_num_loads              24694252 # total number of loads committed
sim_num_stores         5076457.0000 # total number of stores committed
sim_num_branches           11683348 # total number of branches committed
sim_elapsed_time                170 # total simulation time in seconds
sim_inst_rate           588235.2941 # simulation speed (in insts/sec)
sim_total_insn            100000000 # total number of instructions executed
sim_total_refs             29770709 # total number of loads and stores executed
sim_total_loads            24694252 # total number of loads executed
sim_total_stores       5076457.0000 # total number of stores executed
sim_total_branches         11683348 # total number of branches executed
sim_cycle                 118951926 # total simulation time in cycles
sim_IPC                      0.8407 # instructions per cycle
sim_CPI                      1.1895 # cycles per instruction
sim_exec_BW                  0.8407 # total instructions (mis-spec + committed) per cycle
sim_IPB                      8.5592 # instruction per branch
IFQ_count                 475736845 # cumulative IFQ occupancy
IFQ_fcount                118933995 # cumulative IFQ full count
ifq_occupancy                3.9994 # avg IFQ occupancy (insn's)
ifq_rate                     0.8407 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  4.7574 # avg IFQ occupant latency (cycle's)
ifq_full                     0.9998 # fraction of time (cycle's) IFQ was full
RUU_count                1873620930 # cumulative RUU occupancy
RUU_fcount                108667800 # cumulative RUU full count
ruu_occupancy               15.7511 # avg RUU occupancy (insn's)
ruu_rate                     0.8407 # avg RUU dispatch rate (insn/cycle)
ruu_latency                 18.7362 # avg RUU occupant latency (cycle's)
ruu_full                     0.9135 # fraction of time (cycle's) RUU was full
LSQ_count                 604895910 # cumulative LSQ occupancy
LSQ_fcount                 12027327 # cumulative LSQ full count
lsq_occupancy                5.0852 # avg LSQ occupancy (insn's)
lsq_rate                     0.8407 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  6.0490 # avg LSQ occupant latency (cycle's)
lsq_full                     0.1011 # fraction of time (cycle's) LSQ was full
sim_slip                 2608287352 # total number of slip cycles
avg_sim_slip                26.0829 # the average slip between issue and retirement
il1.accesses              120168738 # total number of accesses
il1.hits                  120168575 # total number of hits
il1.misses                      163 # total number of misses
il1.replacements                  0 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0000 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               29770503 # total number of accesses
dl1.hits                   25134306 # total number of hits
dl1.misses                  4636197 # total number of misses
dl1.replacements            4635941 # total number of replacements
dl1.writebacks               667497 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.1557 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.1557 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0224 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl2.accesses                5303857 # total number of accesses
dl2.hits                    5089958 # total number of hits
dl2.misses                   213899 # total number of misses
dl2.replacements             211851 # total number of replacements
dl2.writebacks               109109 # total number of writebacks
dl2.invalidations                 0 # total number of invalidations
dl2.miss_rate                0.0403 # miss rate (i.e., misses/ref)
dl2.repl_rate                0.0399 # replacement rate (i.e., repls/ref)
dl2.wb_rate                  0.0206 # writeback rate (i.e., wrbks/ref)
dl2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             120168738 # total number of accesses
itlb.hits                 120168729 # total number of hits
itlb.misses                       9 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses              29770707 # total number of accesses
dtlb.hits                  29770482 # total number of hits
dtlb.misses                     225 # total number of misses
dtlb.replacements                97 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           49717799.6390 # total power usage of rename unit
bpred_power            396881736.1355 # total power usage of bpred unit
window_power           262208040.2393 # total power usage of instruction window
lsq_power              51173141.0879 # total power usage of load/store queue
regfile_power          424952436.7875 # total power usage of arch. regfile
icache_power           360729215.6956 # total power usage of icache
dcache_power           382947632.4413 # total power usage of dcache
dcache2_power          369105064.0354 # total power usage of dcache2
alu_power              563272325.0197 # total power usage of alu
falu_power             424689450.7869 # total power usage of falu
resultbus_power        105286607.4129 # total power usage of resultbus
clock_power            2266898175.9552 # total power usage of clock
avg_rename_power             0.4180 # avg power usage of rename unit
avg_bpred_power              3.3365 # avg power usage of bpred unit
avg_window_power             2.2043 # avg power usage of instruction window
avg_lsq_power                0.4302 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             3.0326 # avg power usage of icache
avg_dcache_power             3.2193 # avg power usage of dcache
avg_dcache2_power            3.1030 # avg power usage of dcache2
avg_alu_power                4.7353 # avg power usage of alu
avg_falu_power               3.5703 # avg power usage of falu
avg_resultbus_power          0.8851 # avg power usage of resultbus
avg_clock_power             19.0573 # avg power usage of clock
fetch_stage_power      757610951.8311 # total power usage of fetch stage
dispatch_stage_power   49717799.6390 # total power usage of dispatch stage
issue_stage_power      1733992810.2366 # total power usage of issue stage
avg_fetch_power              6.3691 # average power of fetch unit per cycle
avg_dispatch_power           0.4180 # average power of dispatch unit per cycle
avg_issue_power             14.5773 # average power of issue unit per cycle
total_power            5233172174.4494 # total power per cycle
avg_total_power_cycle       43.9940 # average total power per cycle
avg_total_power_cycle_nofp_nod2      37.3208 # average total power per cycle
avg_total_power_insn        52.3317 # average total power per insn
avg_total_power_insn_nofp_nod2      44.3938 # average total power per insn
rename_power_cc1       30849127.6750 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       199571512.9155 # total power usage of instruction window_cc1
lsq_power_cc1          7383071.2022 # total power usage of lsq_cc1
regfile_power_cc1      242872767.5581 # total power usage of arch. regfile_cc1
icache_power_cc1       223827074.5610 # total power usage of icache_cc1
dcache_power_cc1       95841606.1035 # total power usage of dcache_cc1
dcache2_power_cc1      16457745.0750 # total power usage of dcache2_cc1
alu_power_cc1          116479070.3999 # total power usage of alu_cc1
resultbus_power_cc1    73647965.1632 # total power usage of resultbus_cc1
clock_power_cc1        860305409.4867 # total power usage of clock_cc1
avg_rename_power_cc1         0.2593 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1         1.6777 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.0621 # avg power usage of lsq_cc1
avg_regfile_power_cc1        2.0418 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.8817 # avg power usage of icache_cc1
avg_dcache_power_cc1         0.8057 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.1384 # avg power usage of dcache2_cc1
avg_alu_power_cc1            0.9792 # avg power usage of alu_cc1
avg_resultbus_power_cc1       0.6191 # avg power usage of resultbus_cc1
avg_clock_power_cc1          7.2324 # avg power usage of clock_cc1
fetch_stage_power_cc1  223827074.5610 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 30849127.6750 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  509380970.8594 # total power usage of issue stage_cc1
avg_fetch_power_cc1          1.8817 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.2593 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1          4.2822 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  1867235350.1402 # total power per cycle_cc1
avg_total_power_cycle_cc1      15.6974 # average total power per cycle_cc1
avg_total_power_insn_cc1      18.6724 # average total power per insn_cc1
rename_power_cc2       10449137.1665 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       79839403.3223 # total power usage of instruction window_cc2
lsq_power_cc2          7383071.2022 # total power usage of lsq_cc2
regfile_power_cc2      36485210.7274 # total power usage of arch. regfile_cc2
icache_power_cc2       223827074.5610 # total power usage of icache_cc2
dcache_power_cc2       95841606.1035 # total power usage of dcache_cc2
dcache2_power_cc2      16457745.0750 # total power usage of dcache2_cc2
alu_power_cc2          116481949.1955 # total power usage of alu_cc2
resultbus_power_cc2    23444082.5098 # total power usage of resultbus_cc2
clock_power_cc2        515870308.4225 # total power usage of clock_cc2
avg_rename_power_cc2         0.0878 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         0.6712 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.0621 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.3067 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.8817 # avg power usage of icache_cc2
avg_dcache_power_cc2         0.8057 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.1384 # avg power usage of dcache2_cc2
avg_alu_power_cc2            0.9792 # avg power usage of alu_cc2
avg_resultbus_power_cc2       0.1971 # avg power usage of resultbus_cc2
avg_clock_power_cc2          4.3368 # avg power usage of clock_cc2
fetch_stage_power_cc2  223827074.5610 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 10449137.1665 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  339447857.4083 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.8817 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.0878 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          2.8537 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  1126079588.2857 # total power per cycle_cc2
avg_total_power_cycle_cc2       9.4667 # average total power per cycle_cc2
avg_total_power_insn_cc2      11.2608 # average total power per insn_cc2
rename_power_cc3       12336004.3528 # total power usage of rename unit_cc3
bpred_power_cc3        39688173.5979 # total power usage of bpred unit_cc3
window_power_cc3       84101819.3452 # total power usage of instruction window_cc3
lsq_power_cc3          11760883.1398 # total power usage of lsq_cc3
regfile_power_cc3      52327325.7889 # total power usage of arch. regfile_cc3
icache_power_cc3       237517288.6582 # total power usage of icache_cc3
dcache_power_cc3       124764673.1506 # total power usage of dcache_cc3
dcache2_power_cc3      51930324.3906 # total power usage of dcache2_cc3
alu_power_cc3          161161275.0739 # total power usage of alu_cc3
resultbus_power_cc3    26116960.6467 # total power usage of resultbus_cc3
clock_power_cc3        652509332.3979 # total power usage of clock_cc3
avg_rename_power_cc3         0.1037 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.3336 # avg power usage of bpred unit_cc3
avg_window_power_cc3         0.7070 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.0989 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.4399 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.9968 # avg power usage of icache_cc3
avg_dcache_power_cc3         1.0489 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.4366 # avg power usage of dcache2_cc3
avg_alu_power_cc3            1.3548 # avg power usage of alu_cc3
avg_resultbus_power_cc3       0.2196 # avg power usage of resultbus_cc3
avg_clock_power_cc3          5.4855 # avg power usage of clock_cc3
fetch_stage_power_cc3  277205462.2560 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 12336004.3528 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  459835935.7467 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.3304 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.1037 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3          3.8657 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  1454214060.5424 # total power per cycle_cc3
avg_total_power_cycle_cc3      12.2252 # average total power per cycle_cc3
avg_total_power_insn_cc3      14.5421 # average total power per insn_cc3
total_rename_access       100000000 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access       354840856 # total number accesses of instruction window
total_lsq_access           29770911 # total number accesses of load/store queue
total_regfile_access      135688208 # total number accesses of arch. regfile
total_icache_access       120168738 # total number accesses of icache
total_dcache_access        29770503 # total number accesses of dcache
total_dcache2_access        5303857 # total number accesses of dcache2
total_alu_access           99981707 # total number accesses of alu
total_resultbus_access    113010892 # total number accesses of resultbus
avg_rename_access            0.8407 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            2.9831 # avg number accesses of instruction window
avg_lsq_access               0.2503 # avg number accesses of lsq
avg_regfile_access           1.1407 # avg number accesses of arch. regfile
avg_icache_access            1.0102 # avg number accesses of icache
avg_dcache_access            0.2503 # avg number accesses of dcache
avg_dcache2_access           0.0446 # avg number accesses of dcache2
avg_alu_access               0.8405 # avg number accesses of alu
avg_resultbus_access         0.9501 # avg number accesses of resultbus
max_rename_access                 4 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                14 # max number accesses of instruction window
max_lsq_access                    3 # max number accesses of load/store queue
max_regfile_access               10 # max number accesses of arch. regfile
max_icache_access                 4 # max number accesses of icache
max_dcache_access                 2 # max number accesses of dcache
max_dcache2_access                4 # max number accesses of dcache2
max_alu_access                    2 # max number accesses of alu
max_resultbus_access              6 # max number accesses of resultbus
max_cycle_power_cc1         25.2427 # maximum cycle power usage of cc1
max_cycle_power_cc2         20.0542 # maximum cycle power usage of cc2
max_cycle_power_cc3         21.9085 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                 212992 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size                 402416 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x01200095e0 # program entry point (initial PC)
ld_environ_base        0x011ff96ef0 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                23129 # total number of pages allocated
mem.page_mem                185032k # total size of memory pages allocated
mem.ptab_misses             8146619 # total first level page table misses
mem.ptab_accesses         877010140 # total page table accesses
mem.ptab_miss_rate           0.0093 # first level page table miss rate

