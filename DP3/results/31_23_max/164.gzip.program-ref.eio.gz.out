sim-outorder: SimpleScalar/Alpha Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 512
Window Size: 512
Number of Virtual Registers: 32
Number of Physical Registers: 512
Datapath Width: 64
Total Power Consumption: 428161
Branch Predictor Power Consumption: 3.11615  (0.000728%)
 branch target buffer power (W): 2.49493
 local predict power (W): 0.354432
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 2146.62  (0.501%)
 Instruction Decode Power (W): 2.04692
 RAT decode_power (W): 14.5298
 RAT wordline_power (W): 143.664
 RAT bitline_power (W): 1748.57
 DCL Comparators (W): 237.813
Instruction Window Power Consumption: 219131  (51.2%)
 tagdrive (W): 20067.6
 tagmatch (W): 4162.93
 Selection Logic (W): 58.7548
 decode_power (W): 321.155
 wordline_power (W): 983.25
 bitline_power (W): 193537
Load/Store Queue Power Consumption: 162.523  (0.038%)
 tagdrive (W): 82.7366
 tagmatch (W): 30.9028
 decode_power (W): 3.34536
 wordline_power (W): 0.139808
 bitline_power (W): 45.3986
Arch. Register File Power Consumption: 13400.7  (3.13%)
 decode_power (W): 14.5298
 wordline_power (W): 983.25
 bitline_power (W): 12402.9
Result Bus Power Consumption: 191641  (44.8%)
Total Clock Power: 1604.92  (0.375%)
Int ALU Power: 9.32026  (0.00218%)
FP ALU Power: 28.5621  (0.00667%)
Instruction Cache Power Consumption: 2.76773  (0.000646%)
 decode_power (W): 0.151353
 wordline_power (W): 0.180479
 bitline_power (W): 1.42251
 senseamp_power (W): 0.768
 tagarray_power (W): 0.245382
Itlb_power (W): 0.264936 (6.19e-05%)
Data Cache Power Consumption: 22.1418  (0.00517%)
 decode_power (W): 1.21082
 wordline_power (W): 1.44383
 bitline_power (W): 11.3801
 senseamp_power (W): 6.144
 tagarray_power (W): 1.96306
Dtlb_power (W): 3.61376 (0.000844%)
Level 2 Cache Power Consumption: 3.10298 (0.000725%)
 decode_power (W): 0.19487
 wordline_power (W): 0.0430878
 bitline_power (W): 1.77274
 senseamp_power (W): 0.192
 tagarray_power (W): 0.900275
sim: loading EIO file: ../benchmarks/164.gzip.program-ref.eio.gz
sim: command line: ./sim-outorder -config ../configs/current.config ../benchmarks/164.gzip.program-ref.eio.gz 

sim: simulation started @ Tue Nov 24 14:07:33 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     ../results/31_23_max/164.gzip.program-ref.eio.gz.out # redirect simulator output to file (non-interactive only)
# -redir:prog       /dev/null # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-freq            600000000.0000 # frequency             
-max:inst           100000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize            512 # instruction fetch queue size (in insts)
-fetch:mplat               15 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 8192 8 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width             512 # instruction decode B/W (insts/cycle)
-issue:width              512 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width             512 # instruction commit B/W (insts/cycle)
-ruu:size                 512 # register update unit (RUU) size
-lsq:size                 512 # load/store queue (LSQ) size
-cache:dl1       dl1:32:64:8:f # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       dl2:256:64:8:f # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               2 # l2 data cache hit latency (in cycles)
-cache:il1       il1:32:64:8:f # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               2 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         103 1 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   8 # total number of integer ALU's available
-res:imult                  8 # total number of integer multiplier/dividers available
-res:memport                8 # total number of memory system ports available (to CPU)
-res:fpalu                  8 # total number of floating point ALU's available
-res:fpmult                 8 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **
fatal: STD unknown array overflow, increase MAX_STD_UNKNOWNS

sim: ** simulation statistics **
sim_num_insn                2253760 # total number of instructions committed
sim_num_refs                 617853 # total number of loads and stores committed
sim_num_loads                546546 # total number of loads committed
sim_num_stores           71307.0000 # total number of stores committed
sim_num_branches             278600 # total number of branches committed
sim_elapsed_time                 10 # total simulation time in seconds
sim_inst_rate           225376.0000 # simulation speed (in insts/sec)
sim_total_insn              2253760 # total number of instructions executed
sim_total_refs               617853 # total number of loads and stores executed
sim_total_loads              546546 # total number of loads executed
sim_total_stores         71307.0000 # total number of stores executed
sim_total_branches           278600 # total number of branches executed
sim_cycle                    804717 # total simulation time in cycles
sim_IPC                      2.8007 # instructions per cycle
sim_CPI                      0.3571 # cycles per instruction
sim_exec_BW                  2.8007 # total instructions (mis-spec + committed) per cycle
sim_IPB                      8.0896 # instruction per branch
IFQ_count                 402716965 # cumulative IFQ occupancy
IFQ_fcount                   786015 # cumulative IFQ full count
ifq_occupancy              500.4455 # avg IFQ occupancy (insn's)
ifq_rate                     2.8007 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                178.6867 # avg IFQ occupant latency (cycle's)
ifq_full                     0.9768 # fraction of time (cycle's) IFQ was full
RUU_count                 392271709 # cumulative RUU occupancy
RUU_fcount                   619472 # cumulative RUU full count
ruu_occupancy              487.4654 # avg RUU occupancy (insn's)
ruu_rate                     2.8007 # avg RUU dispatch rate (insn/cycle)
ruu_latency                174.0521 # avg RUU occupant latency (cycle's)
ruu_full                     0.7698 # fraction of time (cycle's) RUU was full
LSQ_count                 105433149 # cumulative LSQ occupancy
LSQ_fcount                        0 # cumulative LSQ full count
lsq_occupancy              131.0189 # avg LSQ occupancy (insn's)
lsq_rate                     2.8007 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                 46.7810 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0000 # fraction of time (cycle's) LSQ was full
sim_slip                  500543506 # total number of slip cycles
avg_sim_slip               222.0926 # the average slip between issue and retirement
il1.accesses               92488739 # total number of accesses
il1.hits                   92488569 # total number of hits
il1.misses                      170 # total number of misses
il1.replacements                  0 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0000 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0000 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses                 593661 # total number of accesses
dl1.hits                     492769 # total number of hits
dl1.misses                   100892 # total number of misses
dl1.replacements             100636 # total number of replacements
dl1.writebacks                 8619 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.1699 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.1695 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0145 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl2.accesses                 109681 # total number of accesses
dl2.hits                     103590 # total number of hits
dl2.misses                     6091 # total number of misses
dl2.replacements               4043 # total number of replacements
dl2.writebacks                 1192 # total number of writebacks
dl2.invalidations                 0 # total number of invalidations
dl2.miss_rate                0.0555 # miss rate (i.e., misses/ref)
dl2.repl_rate                0.0369 # replacement rate (i.e., repls/ref)
dl2.wb_rate                  0.0109 # writeback rate (i.e., wrbks/ref)
dl2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses              92488739 # total number of accesses
itlb.hits                  92488734 # total number of hits
itlb.misses                       5 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses                617779 # total number of accesses
dtlb.hits                    617722 # total number of hits
dtlb.misses                      57 # total number of misses
dtlb.replacements                 0 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0001 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           1727420666.7656 # total power usage of rename unit
bpred_power            2507619.1468 # total power usage of bpred unit
window_power           176338216034.2766 # total power usage of instruction window
lsq_power              130785247.5658 # total power usage of load/store queue
regfile_power          10783782360.7138 # total power usage of arch. regfile
icache_power           2440436.4298 # total power usage of icache
dcache_power           20725962.9119 # total power usage of dcache
dcache2_power          2497018.1592 # total power usage of dcache2
alu_power              30484571.6913 # total power usage of alu
falu_power             22984399.2912 # total power usage of falu
resultbus_power        154216605689.8963 # total power usage of resultbus
clock_power            1291510101.3842 # total power usage of clock
avg_rename_power          2146.6188 # avg power usage of rename unit
avg_bpred_power              3.1162 # avg power usage of bpred unit
avg_window_power        219130.7205 # avg power usage of instruction window
avg_lsq_power              162.5233 # avg power usage of lsq
avg_regfile_power        13400.7140 # avg power usage of arch. regfile
avg_icache_power             3.0327 # avg power usage of icache
avg_dcache_power            25.7556 # avg power usage of dcache
avg_dcache2_power            3.1030 # avg power usage of dcache2
avg_alu_power               37.8824 # avg power usage of alu
avg_falu_power              28.5621 # avg power usage of falu
avg_resultbus_power     191640.7951 # avg power usage of resultbus
avg_clock_power           1604.9246 # avg power usage of clock
fetch_stage_power      4948055.5766 # total power usage of fetch stage
dispatch_stage_power   1727420666.7656 # total power usage of dispatch stage
issue_stage_power      330739314524.5012 # total power usage of issue stage
avg_fetch_power              6.1488 # average power of fetch unit per cycle
avg_dispatch_power        2146.6188 # average power of dispatch unit per cycle
avg_issue_power         411000.7798 # average power of issue unit per cycle
total_power            344546975708.9414 # total power per cycle
avg_total_power_cycle   428159.1860 # average total power per cycle
avg_total_power_cycle_nofp_nod2  428127.5210 # average total power per cycle
avg_total_power_insn    152876.5156 # average total power per insn
avg_total_power_insn_nofp_nod2  152865.2094 # average total power per insn
rename_power_cc1       842936429.6450 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       114065164913.2362 # total power usage of instruction window_cc1
lsq_power_cc1          32933435.4418 # total power usage of lsq_cc1
regfile_power_cc1      4697986452.3180 # total power usage of arch. regfile_cc1
icache_power_cc1       1190845.3459 # total power usage of icache_cc1
dcache_power_cc1       7413563.7145 # total power usage of dcache_cc1
dcache2_power_cc1       305367.0471 # total power usage of dcache2_cc1
alu_power_cc1          5225385.6398 # total power usage of alu_cc1
resultbus_power_cc1    102584838500.4334 # total power usage of resultbus_cc1
clock_power_cc1        652182334.1324 # total power usage of clock_cc1
avg_rename_power_cc1      1047.4942 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1    141745.6881 # avg power usage of instruction window_cc1
avg_lsq_power_cc1           40.9255 # avg power usage of lsq_cc1
avg_regfile_power_cc1     5838.0604 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.4798 # avg power usage of icache_cc1
avg_dcache_power_cc1         9.2126 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.3795 # avg power usage of dcache2_cc1
avg_alu_power_cc1            6.4934 # avg power usage of alu_cc1
avg_resultbus_power_cc1  127479.3977 # avg power usage of resultbus_cc1
avg_clock_power_cc1        810.4493 # avg power usage of clock_cc1
fetch_stage_power_cc1  1190845.3459 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 842936429.6450 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  216695881165.5128 # total power usage of issue stage_cc1
avg_fetch_power_cc1          1.4798 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1    1047.4942 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1     269282.0969 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  222890177226.9540 # total power per cycle_cc1
avg_total_power_cycle_cc1  276979.5807 # average total power per cycle_cc1
avg_total_power_insn_cc1   98897.0331 # average total power per insn_cc1
rename_power_cc2       9449147.7719 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       1334424280.2363 # total power usage of instruction window_cc2
lsq_power_cc2          8268649.4123 # total power usage of lsq_cc2
regfile_power_cc2      24199850.1937 # total power usage of arch. regfile_cc2
icache_power_cc2       1190845.3459 # total power usage of icache_cc2
dcache_power_cc2       1911261.3298 # total power usage of dcache_cc2
dcache2_power_cc2        42542.1994 # total power usage of dcache2_cc2
alu_power_cc2          2624791.6836 # total power usage of alu_cc2
resultbus_power_cc2    884754810.0260 # total power usage of resultbus_cc2
clock_power_cc2        6255964.8575 # total power usage of clock_cc2
avg_rename_power_cc2        11.7422 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2      1658.2529 # avg power usage of instruction window_cc2
avg_lsq_power_cc2           10.2752 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2       30.0725 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.4798 # avg power usage of icache_cc2
avg_dcache_power_cc2         2.3751 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0529 # avg power usage of dcache2_cc2
avg_alu_power_cc2            3.2618 # avg power usage of alu_cc2
avg_resultbus_power_cc2    1099.4608 # avg power usage of resultbus_cc2
avg_clock_power_cc2          7.7741 # avg power usage of clock_cc2
fetch_stage_power_cc2  1190845.3459 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 9449147.7719 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  2232026334.8874 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.4798 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2      11.7422 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2       2773.6786 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  2273122143.0563 # total power per cycle_cc2
avg_total_power_cycle_cc2    2824.7473 # average total power per cycle_cc2
avg_total_power_insn_cc2    1008.5910 # average total power per insn_cc2
rename_power_cc3       97897571.4862 # total power usage of rename unit_cc3
bpred_power_cc3         250761.9147 # total power usage of bpred unit_cc3
window_power_cc3       6399595312.6282 # total power usage of instruction window_cc3
lsq_power_cc3          18023966.5632 # total power usage of lsq_cc3
regfile_power_cc3      578627590.1405 # total power usage of arch. regfile_cc3
icache_power_cc3       1315804.4543 # total power usage of icache_cc3
dcache_power_cc3       3243920.0607 # total power usage of dcache_cc3
dcache2_power_cc3       261707.3106 # total power usage of dcache2_cc3
alu_power_cc3          5150710.2889 # total power usage of alu_cc3
resultbus_power_cc3    5364032605.5043 # total power usage of resultbus_cc3
clock_power_cc3        64646605.9596 # total power usage of clock_cc3
avg_rename_power_cc3       121.6547 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.3116 # avg power usage of bpred unit_cc3
avg_window_power_cc3      7952.6036 # avg power usage of instruction window_cc3
avg_lsq_power_cc3           22.3979 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3      719.0448 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.6351 # avg power usage of icache_cc3
avg_dcache_power_cc3         4.0311 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.3252 # avg power usage of dcache2_cc3
avg_alu_power_cc3            6.4006 # avg power usage of alu_cc3
avg_resultbus_power_cc3    6665.7379 # avg power usage of resultbus_cc3
avg_clock_power_cc3         80.3346 # avg power usage of clock_cc3
fetch_stage_power_cc3  1566566.3690 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 97897571.4862 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  11790308222.3559 # total power usage of issue stage_cc3
avg_fetch_power_cc3          1.9467 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3     121.6547 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3      14651.4964 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  12533046556.3111 # total power per cycle_cc3
avg_total_power_cycle_cc3   15574.4772 # average total power per cycle_cc3
avg_total_power_insn_cc3    5560.9499 # average total power per insn_cc3
total_rename_access         2253760 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access         7934384 # total number accesses of instruction window
total_lsq_access             641897 # total number accesses of load/store queue
total_regfile_access        3043234 # total number accesses of arch. regfile
total_icache_access        92488739 # total number accesses of icache
total_dcache_access          593661 # total number accesses of dcache
total_dcache2_access         109681 # total number accesses of dcache2
total_alu_access            2252977 # total number accesses of alu
total_resultbus_access      2521353 # total number accesses of resultbus
avg_rename_access            2.8007 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            9.8598 # avg number accesses of instruction window
avg_lsq_access               0.7977 # avg number accesses of lsq
avg_regfile_access           3.7817 # avg number accesses of arch. regfile
avg_icache_access          114.9332 # avg number accesses of icache
avg_dcache_access            0.7377 # avg number accesses of dcache
avg_dcache2_access           0.1363 # avg number accesses of dcache2
avg_alu_access               2.7997 # avg number accesses of alu
avg_resultbus_access         3.1332 # avg number accesses of resultbus
max_rename_access               197 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access               192 # max number accesses of instruction window
max_lsq_access                   19 # max number accesses of load/store queue
max_regfile_access              449 # max number accesses of arch. regfile
max_icache_access               512 # max number accesses of icache
max_dcache_access                16 # max number accesses of dcache
max_dcache2_access                7 # max number accesses of dcache2
max_alu_access                    8 # max number accesses of alu
max_resultbus_access            167 # max number accesses of resultbus
max_cycle_power_cc1     412272.6337 # maximum cycle power usage of cc1
max_cycle_power_cc2      86383.3467 # maximum cycle power usage of cc2
max_cycle_power_cc3      88013.8457 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                 212992 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size                 402416 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x01200119b4 # program entry point (initial PC)
ld_environ_base        0x011ff96ef0 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                23131 # total number of pages allocated
mem.page_mem                185048k # total size of memory pages allocated
mem.ptab_misses               71160 # total first level page table misses
mem.ptab_accesses         569838896 # total page table accesses
mem.ptab_miss_rate           0.0001 # first level page table miss rate

