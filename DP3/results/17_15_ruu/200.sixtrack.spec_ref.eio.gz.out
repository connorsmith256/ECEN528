sim-outorder: SimpleScalar/Alpha Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 4
Window Size: 64
Number of Virtual Registers: 32
Number of Physical Registers: 64
Datapath Width: 64
Total Power Consumption: 81.4044
Branch Predictor Power Consumption: 3.33649  (4.2%)
 branch target buffer power (W): 2.49493
 local predict power (W): 0.574771
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.550645  (0.693%)
 Instruction Decode Power (W): 0.0159915
 RAT decode_power (W): 0.113514
 RAT wordline_power (W): 0.0400762
 RAT bitline_power (W): 0.370156
 DCL Comparators (W): 0.0109075
Instruction Window Power Consumption: 5.85882  (7.38%)
 tagdrive (W): 0.431765
 tagmatch (W): 0.187578
 Selection Logic (W): 0.0563711
 decode_power (W): 0.244146
 wordline_power (W): 0.0844643
 bitline_power (W): 4.85449
Load/Store Queue Power Consumption: 1.62318  (2.04%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 1.04217
Arch. Register File Power Consumption: 3.57247  (4.5%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 3.64461  (4.59%)
Total Clock Power: 29.3028  (36.9%)
Int ALU Power: 4.66013  (5.87%)
FP ALU Power: 14.281  (18%)
Instruction Cache Power Consumption: 2.76773  (3.49%)
 decode_power (W): 0.151353
 wordline_power (W): 0.180479
 bitline_power (W): 1.42251
 senseamp_power (W): 0.768
 tagarray_power (W): 0.245382
Itlb_power (W): 0.264834 (0.334%)
Data Cache Power Consumption: 5.53546  (6.97%)
 decode_power (W): 0.302705
 wordline_power (W): 0.360958
 bitline_power (W): 2.84503
 senseamp_power (W): 1.536
 tagarray_power (W): 0.490764
Dtlb_power (W): 0.903238 (1.14%)
Level 2 Cache Power Consumption: 3.10298 (3.91%)
 decode_power (W): 0.19487
 wordline_power (W): 0.0430878
 bitline_power (W): 1.77274
 senseamp_power (W): 0.192
 tagarray_power (W): 0.900275
sim: loading EIO file: ../benchmarks/200.sixtrack.spec_ref.eio.gz
sim: command line: ./sim-outorder -config ../configs/current.config ../benchmarks/200.sixtrack.spec_ref.eio.gz 

sim: simulation started @ Tue Nov 24 10:28:10 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     ../results/17_15_ruu/200.sixtrack.spec_ref.eio.gz.out # redirect simulator output to file (non-interactive only)
# -redir:prog       /dev/null # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-freq            600000000.0000 # frequency             
-max:inst           100000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat               15 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 16384 4 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  64 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:32:64:8:f # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       dl2:256:64:8:f # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               2 # l2 data cache hit latency (in cycles)
-cache:il1       il1:32:64:8:f # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               2 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         103 1 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn              100000000 # total number of instructions committed
sim_num_refs               24693460 # total number of loads and stores committed
sim_num_loads              19363691 # total number of loads committed
sim_num_stores         5329769.0000 # total number of stores committed
sim_num_branches            2247043 # total number of branches committed
sim_elapsed_time                 99 # total simulation time in seconds
sim_inst_rate          1010101.0101 # simulation speed (in insts/sec)
sim_total_insn            100000000 # total number of instructions executed
sim_total_refs             24693460 # total number of loads and stores executed
sim_total_loads            19363691 # total number of loads executed
sim_total_stores       5329769.0000 # total number of stores executed
sim_total_branches          2247043 # total number of branches executed
sim_cycle                  48313609 # total simulation time in cycles
sim_IPC                      2.0698 # instructions per cycle
sim_CPI                      0.4831 # cycles per instruction
sim_exec_BW                  2.0698 # total instructions (mis-spec + committed) per cycle
sim_IPB                     44.5029 # instruction per branch
IFQ_count                 191003248 # cumulative IFQ occupancy
IFQ_fcount                 47719730 # cumulative IFQ full count
ifq_occupancy                3.9534 # avg IFQ occupancy (insn's)
ifq_rate                     2.0698 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.9100 # avg IFQ occupant latency (cycle's)
ifq_full                     0.9877 # fraction of time (cycle's) IFQ was full
RUU_count                1574614960 # cumulative RUU occupancy
RUU_fcount                      463 # cumulative RUU full count
ruu_occupancy               32.5915 # avg RUU occupancy (insn's)
ruu_rate                     2.0698 # avg RUU dispatch rate (insn/cycle)
ruu_latency                 15.7461 # avg RUU occupant latency (cycle's)
ruu_full                     0.0000 # fraction of time (cycle's) RUU was full
LSQ_count                 341388993 # cumulative LSQ occupancy
LSQ_fcount                 27787403 # cumulative LSQ full count
lsq_occupancy                7.0661 # avg LSQ occupancy (insn's)
lsq_rate                     2.0698 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  3.4139 # avg LSQ occupant latency (cycle's)
lsq_full                     0.5751 # fraction of time (cycle's) LSQ was full
sim_slip                 2040697289 # total number of slip cycles
avg_sim_slip                20.4070 # the average slip between issue and retirement
il1.accesses              101082822 # total number of accesses
il1.hits                  101005147 # total number of hits
il1.misses                    77675 # total number of misses
il1.replacements              77419 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0008 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0008 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               24668518 # total number of accesses
dl1.hits                   24576496 # total number of hits
dl1.misses                    92022 # total number of misses
dl1.replacements              91766 # total number of replacements
dl1.writebacks                20408 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0037 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0037 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0008 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl2.accesses                 190105 # total number of accesses
dl2.hits                     129435 # total number of hits
dl2.misses                    60670 # total number of misses
dl2.replacements              58622 # total number of replacements
dl2.writebacks                 1836 # total number of writebacks
dl2.invalidations                 0 # total number of invalidations
dl2.miss_rate                0.3191 # miss rate (i.e., misses/ref)
dl2.repl_rate                0.3084 # replacement rate (i.e., repls/ref)
dl2.wb_rate                  0.0097 # writeback rate (i.e., wrbks/ref)
dl2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             101082822 # total number of accesses
itlb.hits                 101082805 # total number of hits
itlb.misses                      17 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses              24693452 # total number of accesses
dtlb.hits                  24691772 # total number of hits
dtlb.misses                    1680 # total number of misses
dtlb.replacements              1552 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0001 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0001 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           26603666.9055 # total power usage of rename unit
bpred_power            161197801.5890 # total power usage of bpred unit
window_power           283060567.9446 # total power usage of instruction window
lsq_power              78421636.3642 # total power usage of load/store queue
regfile_power          172599020.4327 # total power usage of arch. regfile
icache_power           146514065.8110 # total power usage of icache
dcache_power           311076630.7162 # total power usage of dcache
dcache2_power          149916006.4015 # total power usage of dcache2
alu_power              915116543.5251 # total power usage of alu
falu_power             689968822.1704 # total power usage of falu
resultbus_power        176084145.1671 # total power usage of resultbus
clock_power            1415725228.4092 # total power usage of clock
avg_rename_power             0.5506 # avg power usage of rename unit
avg_bpred_power              3.3365 # avg power usage of bpred unit
avg_window_power             5.8588 # avg power usage of instruction window
avg_lsq_power                1.6232 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             3.0326 # avg power usage of icache
avg_dcache_power             6.4387 # avg power usage of dcache
avg_dcache2_power            3.1030 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          3.6446 # avg power usage of resultbus
avg_clock_power             29.3028 # avg power usage of clock
fetch_stage_power      307711867.3999 # total power usage of fetch stage
dispatch_stage_power   26603666.9055 # total power usage of dispatch stage
issue_stage_power      1913675530.1187 # total power usage of issue stage
avg_fetch_power              6.3691 # average power of fetch unit per cycle
avg_dispatch_power           0.5506 # average power of dispatch unit per cycle
avg_issue_power             39.6095 # average power of issue unit per cycle
total_power            3836315313.2660 # total power per cycle
avg_total_power_cycle       79.4044 # average total power per cycle
avg_total_power_cycle_nofp_nod2      62.0204 # average total power per cycle
avg_total_power_insn        38.3632 # average total power per insn
avg_total_power_insn_nofp_nod2      29.9643 # average total power per insn
rename_power_cc1       15748092.4693 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       260497681.9335 # total power usage of instruction window_cc1
lsq_power_cc1          12627653.3000 # total power usage of lsq_cc1
regfile_power_cc1      130794930.3267 # total power usage of arch. regfile_cc1
icache_power_cc1       86860790.7781 # total power usage of icache_cc1
dcache_power_cc1       118754577.4696 # total power usage of dcache_cc1
dcache2_power_cc1       507870.4142 # total power usage of dcache2_cc1
alu_power_cc1          688156735.0428 # total power usage of alu_cc1
resultbus_power_cc1    154535005.3819 # total power usage of resultbus_cc1
clock_power_cc1        912528448.2613 # total power usage of clock_cc1
avg_rename_power_cc1         0.3260 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1         5.3918 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.2614 # avg power usage of lsq_cc1
avg_regfile_power_cc1        2.7072 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.7979 # avg power usage of icache_cc1
avg_dcache_power_cc1         2.4580 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0105 # avg power usage of dcache2_cc1
avg_alu_power_cc1           14.2435 # avg power usage of alu_cc1
avg_resultbus_power_cc1       3.1986 # avg power usage of resultbus_cc1
avg_clock_power_cc1         18.8876 # avg power usage of clock_cc1
fetch_stage_power_cc1  86860790.7781 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 15748092.4693 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  1235079523.5422 # total power usage of issue stage_cc1
avg_fetch_power_cc1          1.7979 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.3260 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1         25.5638 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  2381011785.3775 # total power per cycle_cc1
avg_total_power_cycle_cc1      49.2824 # average total power per cycle_cc1
avg_total_power_insn_cc1      23.8101 # average total power per insn_cc1
rename_power_cc2       13766135.1838 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       202859801.1820 # total power usage of instruction window_cc2
lsq_power_cc2          7834321.6398 # total power usage of lsq_cc2
regfile_power_cc2      49330560.5389 # total power usage of arch. regfile_cc2
icache_power_cc2       86860790.7781 # total power usage of icache_cc2
dcache_power_cc2       79416541.4203 # total power usage of dcache_cc2
dcache2_power_cc2       294945.6996 # total power usage of dcache2_cc2
alu_power_cc2          270904188.8236 # total power usage of alu_cc2
resultbus_power_cc2    100041597.3932 # total power usage of resultbus_cc2
clock_power_cc2        504134773.9008 # total power usage of clock_cc2
avg_rename_power_cc2         0.2849 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         4.1988 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.1622 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        1.0210 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.7979 # avg power usage of icache_cc2
avg_dcache_power_cc2         1.6438 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0061 # avg power usage of dcache2_cc2
avg_alu_power_cc2            5.6072 # avg power usage of alu_cc2
avg_resultbus_power_cc2       2.0707 # avg power usage of resultbus_cc2
avg_clock_power_cc2         10.4346 # avg power usage of clock_cc2
fetch_stage_power_cc2  86860790.7781 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 13766135.1838 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  661351396.1586 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.7979 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.2849 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2         13.6887 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  1315443656.5602 # total power per cycle_cc2
avg_total_power_cycle_cc2      27.2272 # average total power per cycle_cc2
avg_total_power_insn_cc2      13.1544 # average total power per insn_cc2
rename_power_cc3       14851692.6227 # total power usage of rename unit_cc3
bpred_power_cc3        16119780.1563 # total power usage of bpred unit_cc3
window_power_cc3       204624359.7239 # total power usage of instruction window_cc3
lsq_power_cc3          14347116.8154 # total power usage of lsq_cc3
regfile_power_cc3      51972404.7348 # total power usage of arch. regfile_cc3
icache_power_cc3       92826118.2536 # total power usage of icache_cc3
dcache_power_cc3       99014706.7666 # total power usage of dcache_cc3
dcache2_power_cc3      15236306.0568 # total power usage of dcache2_cc3
alu_power_cc3          293600169.6420 # total power usage of alu_cc3
resultbus_power_cc3    101493649.8622 # total power usage of resultbus_cc3
clock_power_cc3        552939392.9044 # total power usage of clock_cc3
avg_rename_power_cc3         0.3074 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.3336 # avg power usage of bpred unit_cc3
avg_window_power_cc3         4.2353 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.2970 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        1.0757 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.9213 # avg power usage of icache_cc3
avg_dcache_power_cc3         2.0494 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.3154 # avg power usage of dcache2_cc3
avg_alu_power_cc3            6.0770 # avg power usage of alu_cc3
avg_resultbus_power_cc3       2.1007 # avg power usage of resultbus_cc3
avg_clock_power_cc3         11.4448 # avg power usage of clock_cc3
fetch_stage_power_cc3  108945898.4099 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 14851692.6227 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  728316308.8668 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.2550 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.3074 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3         15.0748 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  1457025697.5387 # total power per cycle_cc3
avg_total_power_cycle_cc3      30.1577 # average total power per cycle_cc3
avg_total_power_insn_cc3      14.5703 # average total power per insn_cc3
total_rename_access       100000000 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access       358983646 # total number accesses of instruction window
total_lsq_access           24718388 # total number accesses of load/store queue
total_regfile_access      188132224 # total number accesses of arch. regfile
total_icache_access       101082822 # total number accesses of icache
total_dcache_access        24668518 # total number accesses of dcache
total_dcache2_access         190105 # total number accesses of dcache2
total_alu_access           99881252 # total number accesses of alu
total_resultbus_access    117116628 # total number accesses of resultbus
avg_rename_access            2.0698 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            7.4303 # avg number accesses of instruction window
avg_lsq_access               0.5116 # avg number accesses of lsq
avg_regfile_access           3.8940 # avg number accesses of arch. regfile
avg_icache_access            2.0922 # avg number accesses of icache
avg_dcache_access            0.5106 # avg number accesses of dcache
avg_dcache2_access           0.0039 # avg number accesses of dcache2
avg_alu_access               2.0674 # avg number accesses of alu
avg_resultbus_access         2.4241 # avg number accesses of resultbus
max_rename_access                 4 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                19 # max number accesses of instruction window
max_lsq_access                    4 # max number accesses of load/store queue
max_regfile_access               12 # max number accesses of arch. regfile
max_icache_access                 4 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                4 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              8 # max number accesses of resultbus
max_cycle_power_cc1         72.2260 # maximum cycle power usage of cc1
max_cycle_power_cc2         51.6075 # maximum cycle power usage of cc2
max_cycle_power_cc3         53.5183 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                2596864 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size               59491504 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x0120177934 # program entry point (initial PC)
ld_environ_base        0x011ff96b70 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                 3655 # total number of pages allocated
mem.page_mem                 29240k # total size of memory pages allocated
mem.ptab_misses                3663 # total first level page table misses
mem.ptab_accesses         633983100 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

