sim-outorder: SimpleScalar/Alpha Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 4
Window Size: 32
Number of Virtual Registers: 32
Number of Physical Registers: 32
Datapath Width: 64
Total Power Consumption: 77.1436
Branch Predictor Power Consumption: 3.33649  (4.44%)
 branch target buffer power (W): 2.49493
 local predict power (W): 0.574771
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.484305  (0.645%)
 Instruction Decode Power (W): 0.0159915
 RAT decode_power (W): 0.113514
 RAT wordline_power (W): 0.0354288
 RAT bitline_power (W): 0.308463
 DCL Comparators (W): 0.0109075
Instruction Window Power Consumption: 3.88117  (5.17%)
 tagdrive (W): 0.19858
 tagmatch (W): 0.0805895
 Selection Logic (W): 0.0295277
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Load/Store Queue Power Consumption: 1.18197  (1.57%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 0.60096
Arch. Register File Power Consumption: 3.57247  (4.75%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 2.75173  (3.66%)
Total Clock Power: 28.42  (37.8%)
Int ALU Power: 4.66013  (6.2%)
FP ALU Power: 14.281  (19%)
Instruction Cache Power Consumption: 2.76773  (3.68%)
 decode_power (W): 0.151353
 wordline_power (W): 0.180479
 bitline_power (W): 1.42251
 senseamp_power (W): 0.768
 tagarray_power (W): 0.245382
Itlb_power (W): 0.264834 (0.352%)
Data Cache Power Consumption: 5.53546  (7.37%)
 decode_power (W): 0.302705
 wordline_power (W): 0.360958
 bitline_power (W): 2.84503
 senseamp_power (W): 1.536
 tagarray_power (W): 0.490764
Dtlb_power (W): 0.903238 (1.2%)
Level 2 Cache Power Consumption: 3.10298 (4.13%)
 decode_power (W): 0.19487
 wordline_power (W): 0.0430878
 bitline_power (W): 1.77274
 senseamp_power (W): 0.192
 tagarray_power (W): 0.900275
sim: loading EIO file: ../benchmarks/200.sixtrack.spec_ref.eio.gz
sim: command line: ./sim-outorder -config ../configs/current.config ../benchmarks/200.sixtrack.spec_ref.eio.gz 

sim: simulation started @ Mon Nov 23 21:20:38 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     ../results/15_01_ruu/200.sixtrack.spec_ref.eio.gz.out # redirect simulator output to file (non-interactive only)
# -redir:prog       /dev/null # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-freq            600000000.0000 # frequency             
-max:inst           100000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat               15 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 16384 4 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  32 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:32:64:8:f # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       dl2:256:64:8:f # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               2 # l2 data cache hit latency (in cycles)
-cache:il1       il1:32:64:8:f # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               2 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         103 1 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn              100000000 # total number of instructions committed
sim_num_refs               24693460 # total number of loads and stores committed
sim_num_loads              19363691 # total number of loads committed
sim_num_stores         5329769.0000 # total number of stores committed
sim_num_branches            2247043 # total number of branches committed
sim_elapsed_time                 97 # total simulation time in seconds
sim_inst_rate          1030927.8351 # simulation speed (in insts/sec)
sim_total_insn            100000000 # total number of instructions executed
sim_total_refs             24693460 # total number of loads and stores executed
sim_total_loads            19363691 # total number of loads executed
sim_total_stores       5329769.0000 # total number of stores executed
sim_total_branches          2247043 # total number of branches executed
sim_cycle                  48700109 # total simulation time in cycles
sim_IPC                      2.0534 # instructions per cycle
sim_CPI                      0.4870 # cycles per instruction
sim_exec_BW                  2.0534 # total instructions (mis-spec + committed) per cycle
sim_IPB                     44.5029 # instruction per branch
IFQ_count                 192567690 # cumulative IFQ occupancy
IFQ_fcount                 48106225 # cumulative IFQ full count
ifq_occupancy                3.9542 # avg IFQ occupancy (insn's)
ifq_rate                     2.0534 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.9257 # avg IFQ occupant latency (cycle's)
ifq_full                     0.9878 # fraction of time (cycle's) IFQ was full
RUU_count                1315384080 # cumulative RUU occupancy
RUU_fcount                 27023948 # cumulative RUU full count
ruu_occupancy               27.0099 # avg RUU occupancy (insn's)
ruu_rate                     2.0534 # avg RUU dispatch rate (insn/cycle)
ruu_latency                 13.1538 # avg RUU occupant latency (cycle's)
ruu_full                     0.5549 # fraction of time (cycle's) RUU was full
LSQ_count                 287569478 # cumulative LSQ occupancy
LSQ_fcount                 13625415 # cumulative LSQ full count
lsq_occupancy                5.9049 # avg LSQ occupancy (insn's)
lsq_rate                     2.0534 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  2.8757 # avg LSQ occupant latency (cycle's)
lsq_full                     0.2798 # fraction of time (cycle's) LSQ was full
sim_slip                 1727646894 # total number of slip cycles
avg_sim_slip                17.2765 # the average slip between issue and retirement
il1.accesses              101373188 # total number of accesses
il1.hits                  101295513 # total number of hits
il1.misses                    77675 # total number of misses
il1.replacements              77419 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0008 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0008 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               24668518 # total number of accesses
dl1.hits                   24576496 # total number of hits
dl1.misses                    92022 # total number of misses
dl1.replacements              91766 # total number of replacements
dl1.writebacks                20408 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0037 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0037 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0008 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl2.accesses                 190105 # total number of accesses
dl2.hits                     129435 # total number of hits
dl2.misses                    60670 # total number of misses
dl2.replacements              58622 # total number of replacements
dl2.writebacks                 1836 # total number of writebacks
dl2.invalidations                 0 # total number of invalidations
dl2.miss_rate                0.3191 # miss rate (i.e., misses/ref)
dl2.repl_rate                0.3084 # replacement rate (i.e., repls/ref)
dl2.wb_rate                  0.0097 # writeback rate (i.e., wrbks/ref)
dl2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             101373188 # total number of accesses
itlb.hits                 101373171 # total number of hits
itlb.misses                      17 # total number of misses
itlb.replacements                 0 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses              24693452 # total number of accesses
dtlb.hits                  24691772 # total number of hits
dtlb.misses                    1680 # total number of misses
dtlb.replacements              1552 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0001 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0001 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           23585728.0830 # total power usage of rename unit
bpred_power            162487354.4001 # total power usage of bpred unit
window_power           189013365.4726 # total power usage of instruction window
lsq_power              57562270.7830 # total power usage of load/store queue
regfile_power          173979780.8976 # total power usage of arch. regfile
icache_power           147686151.4339 # total power usage of icache
dcache_power           313565186.6384 # total power usage of dcache
dcache2_power          151115306.9228 # total power usage of dcache2
alu_power              922437307.8407 # total power usage of alu
falu_power             695488446.0474 # total power usage of falu
resultbus_power        134009750.8488 # total power usage of resultbus
clock_power            1384057195.4963 # total power usage of clock
avg_rename_power             0.4843 # avg power usage of rename unit
avg_bpred_power              3.3365 # avg power usage of bpred unit
avg_window_power             3.8812 # avg power usage of instruction window
avg_lsq_power                1.1820 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             3.0326 # avg power usage of icache
avg_dcache_power             6.4387 # avg power usage of dcache
avg_dcache2_power            3.1030 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          2.7517 # avg power usage of resultbus
avg_clock_power             28.4200 # avg power usage of clock
fetch_stage_power      310173505.8339 # total power usage of fetch stage
dispatch_stage_power   23585728.0830 # total power usage of dispatch stage
issue_stage_power      1767703188.5064 # total power usage of issue stage
avg_fetch_power              6.3691 # average power of fetch unit per cycle
avg_dispatch_power           0.4843 # average power of dispatch unit per cycle
avg_issue_power             36.2977 # average power of issue unit per cycle
total_power            3659499398.8172 # total power per cycle
avg_total_power_cycle       75.1436 # average total power per cycle
avg_total_power_cycle_nofp_nod2      57.7595 # average total power per cycle
avg_total_power_insn        36.5950 # average total power per insn
avg_total_power_insn_nofp_nod2      28.1290 # average total power per insn
rename_power_cc1       17856253.2062 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       173089450.3325 # total power usage of instruction window_cc1
lsq_power_cc1          11156075.7051 # total power usage of lsq_cc1
regfile_power_cc1      128561051.8982 # total power usage of arch. regfile_cc1
icache_power_cc1       111914971.6014 # total power usage of icache_cc1
dcache_power_cc1       119670613.9375 # total power usage of dcache_cc1
dcache2_power_cc1       507243.6129 # total power usage of dcache2_cc1
alu_power_cc1          693395988.9409 # total power usage of alu_cc1
resultbus_power_cc1    118405158.6587 # total power usage of resultbus_cc1
clock_power_cc1        892557295.7610 # total power usage of clock_cc1
avg_rename_power_cc1         0.3667 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1         3.5542 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.2291 # avg power usage of lsq_cc1
avg_regfile_power_cc1        2.6399 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         2.2980 # avg power usage of icache_cc1
avg_dcache_power_cc1         2.4573 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0104 # avg power usage of dcache2_cc1
avg_alu_power_cc1           14.2381 # avg power usage of alu_cc1
avg_resultbus_power_cc1       2.4313 # avg power usage of resultbus_cc1
avg_clock_power_cc1         18.3276 # avg power usage of clock_cc1
fetch_stage_power_cc1  111914971.6014 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 17856253.2062 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  1116224531.1876 # total power usage of issue stage_cc1
avg_fetch_power_cc1          2.2980 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.3667 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1         22.9204 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  2267114103.6543 # total power per cycle_cc1
avg_total_power_cycle_cc1      46.5525 # average total power per cycle_cc1
avg_total_power_insn_cc1      22.6711 # average total power per insn_cc1
rename_power_cc2       12107636.1794 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       136519435.3155 # total power usage of instruction window_cc2
lsq_power_cc2          6830890.0948 # total power usage of lsq_cc2
regfile_power_cc2      50806807.4967 # total power usage of arch. regfile_cc2
icache_power_cc2       111914971.6014 # total power usage of icache_cc2
dcache_power_cc2       79416541.4207 # total power usage of dcache_cc2
dcache2_power_cc2       294945.6996 # total power usage of dcache2_cc2
alu_power_cc2          270904188.8344 # total power usage of alu_cc2
resultbus_power_cc2    75532926.4073 # total power usage of resultbus_cc2
clock_power_cc2        483295097.4874 # total power usage of clock_cc2
avg_rename_power_cc2         0.2486 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         2.8033 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.1403 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        1.0433 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         2.2980 # avg power usage of icache_cc2
avg_dcache_power_cc2         1.6307 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0061 # avg power usage of dcache2_cc2
avg_alu_power_cc2            5.5627 # avg power usage of alu_cc2
avg_resultbus_power_cc2       1.5510 # avg power usage of resultbus_cc2
avg_clock_power_cc2          9.9239 # avg power usage of clock_cc2
fetch_stage_power_cc2  111914971.6014 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 12107636.1794 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  569498927.7723 # total power usage of issue stage_cc2
avg_fetch_power_cc2          2.2980 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.2486 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2         11.6940 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  1227623440.5371 # total power per cycle_cc2
avg_total_power_cycle_cc2      25.2078 # average total power per cycle_cc2
avg_total_power_insn_cc2      12.2762 # average total power per insn_cc2
rename_power_cc3       12680583.6661 # total power usage of rename unit_cc3
bpred_power_cc3        16248735.4373 # total power usage of bpred unit_cc3
window_power_cc3       137704238.9288 # total power usage of instruction window_cc3
lsq_power_cc3          11432909.6978 # total power usage of lsq_cc3
regfile_power_cc3      53681167.8263 # total power usage of arch. regfile_cc3
icache_power_cc3       115492089.5643 # total power usage of icache_cc3
dcache_power_cc3       99246195.9082 # total power usage of dcache_cc3
dcache2_power_cc3      15356290.1009 # total power usage of dcache2_cc3
alu_power_cc3          293808320.6886 # total power usage of alu_cc3
resultbus_power_cc3    76528567.3705 # total power usage of resultbus_cc3
clock_power_cc3        530989127.7376 # total power usage of clock_cc3
avg_rename_power_cc3         0.2604 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.3336 # avg power usage of bpred unit_cc3
avg_window_power_cc3         2.8276 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.2348 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        1.1023 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         2.3715 # avg power usage of icache_cc3
avg_dcache_power_cc3         2.0379 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.3153 # avg power usage of dcache2_cc3
avg_alu_power_cc3            6.0330 # avg power usage of alu_cc3
avg_resultbus_power_cc3       1.5714 # avg power usage of resultbus_cc3
avg_clock_power_cc3         10.9032 # avg power usage of clock_cc3
fetch_stage_power_cc3  131740825.0016 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 12680583.6661 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  634076522.6948 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.7051 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.2604 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3         13.0200 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  1363168226.9264 # total power per cycle_cc3
avg_total_power_cycle_cc3      27.9911 # average total power per cycle_cc3
avg_total_power_insn_cc3      13.6317 # average total power per insn_cc3
total_rename_access       100000000 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access       365110027 # total number accesses of instruction window
total_lsq_access           24718388 # total number accesses of load/store queue
total_regfile_access      194327737 # total number accesses of arch. regfile
total_icache_access       101373188 # total number accesses of icache
total_dcache_access        24668518 # total number accesses of dcache
total_dcache2_access         190105 # total number accesses of dcache2
total_alu_access           99881252 # total number accesses of alu
total_resultbus_access    117116628 # total number accesses of resultbus
avg_rename_access            2.0534 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            7.4971 # avg number accesses of instruction window
avg_lsq_access               0.5076 # avg number accesses of lsq
avg_regfile_access           3.9903 # avg number accesses of arch. regfile
avg_icache_access            2.0816 # avg number accesses of icache
avg_dcache_access            0.5065 # avg number accesses of dcache
avg_dcache2_access           0.0039 # avg number accesses of dcache2
avg_alu_access               2.0509 # avg number accesses of alu
avg_resultbus_access         2.4049 # avg number accesses of resultbus
max_rename_access                 4 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                19 # max number accesses of instruction window
max_lsq_access                    4 # max number accesses of load/store queue
max_regfile_access               12 # max number accesses of arch. regfile
max_icache_access                 4 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                4 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              8 # max number accesses of resultbus
max_cycle_power_cc1         67.2793 # maximum cycle power usage of cc1
max_cycle_power_cc2         46.6769 # maximum cycle power usage of cc2
max_cycle_power_cc3         48.5132 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                2596864 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size               59491504 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x0120177934 # program entry point (initial PC)
ld_environ_base        0x011ff96b70 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                 3655 # total number of pages allocated
mem.page_mem                 29240k # total size of memory pages allocated
mem.ptab_misses                3663 # total first level page table misses
mem.ptab_accesses         634563832 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

