sim-outorder: SimpleScalar/Alpha Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 4
Window Size: 64
Number of Virtual Registers: 32
Number of Physical Registers: 64
Datapath Width: 64
Total Power Consumption: 81.4044
Branch Predictor Power Consumption: 3.33649  (4.2%)
 branch target buffer power (W): 2.49493
 local predict power (W): 0.574771
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 0.550645  (0.693%)
 Instruction Decode Power (W): 0.0159915
 RAT decode_power (W): 0.113514
 RAT wordline_power (W): 0.0400762
 RAT bitline_power (W): 0.370156
 DCL Comparators (W): 0.0109075
Instruction Window Power Consumption: 5.85882  (7.38%)
 tagdrive (W): 0.431765
 tagmatch (W): 0.187578
 Selection Logic (W): 0.0563711
 decode_power (W): 0.244146
 wordline_power (W): 0.0844643
 bitline_power (W): 4.85449
Load/Store Queue Power Consumption: 1.62318  (2.04%)
 tagdrive (W): 0.457232
 tagmatch (W): 0.100774
 decode_power (W): 0.00799577
 wordline_power (W): 0.0150119
 bitline_power (W): 1.04217
Arch. Register File Power Consumption: 3.57247  (4.5%)
 decode_power (W): 0.113514
 wordline_power (W): 0.0844643
 bitline_power (W): 3.37449
Result Bus Power Consumption: 3.64461  (4.59%)
Total Clock Power: 29.3028  (36.9%)
Int ALU Power: 4.66013  (5.87%)
FP ALU Power: 14.281  (18%)
Instruction Cache Power Consumption: 2.76773  (3.49%)
 decode_power (W): 0.151353
 wordline_power (W): 0.180479
 bitline_power (W): 1.42251
 senseamp_power (W): 0.768
 tagarray_power (W): 0.245382
Itlb_power (W): 0.264834 (0.334%)
Data Cache Power Consumption: 5.53546  (6.97%)
 decode_power (W): 0.302705
 wordline_power (W): 0.360958
 bitline_power (W): 2.84503
 senseamp_power (W): 1.536
 tagarray_power (W): 0.490764
Dtlb_power (W): 0.903238 (1.14%)
Level 2 Cache Power Consumption: 3.10298 (3.91%)
 decode_power (W): 0.19487
 wordline_power (W): 0.0430878
 bitline_power (W): 1.77274
 senseamp_power (W): 0.192
 tagarray_power (W): 0.900275
sim: loading EIO file: ../benchmarks/252.eon.cook-ref.eio.gz
sim: command line: ./sim-outorder -config ../configs/current.config ../benchmarks/252.eon.cook-ref.eio.gz 

sim: simulation started @ Tue Nov 24 10:28:08 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     ../results/17_15_ruu/252.eon.cook-ref.eio.gz.out # redirect simulator output to file (non-interactive only)
# -redir:prog       /dev/null # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-freq            600000000.0000 # frequency             
-max:inst           100000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              4 # instruction fetch queue size (in insts)
-fetch:mplat               15 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 16384 4 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               4 # instruction decode B/W (insts/cycle)
-issue:width                4 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               4 # instruction commit B/W (insts/cycle)
-ruu:size                  64 # register update unit (RUU) size
-lsq:size                   8 # load/store queue (LSQ) size
-cache:dl1       dl1:32:64:8:f # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       dl2:256:64:8:f # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               2 # l2 data cache hit latency (in cycles)
-cache:il1       il1:32:64:8:f # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               2 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         103 1 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  1 # total number of integer multiplier/dividers available
-res:memport                2 # total number of memory system ports available (to CPU)
-res:fpalu                  4 # total number of floating point ALU's available
-res:fpmult                 1 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn              100000000 # total number of instructions committed
sim_num_refs               45959960 # total number of loads and stores committed
sim_num_loads              29429717 # total number of loads committed
sim_num_stores         16530243.0000 # total number of stores committed
sim_num_branches           11225005 # total number of branches committed
sim_elapsed_time                109 # total simulation time in seconds
sim_inst_rate           917431.1927 # simulation speed (in insts/sec)
sim_total_insn            100000000 # total number of instructions executed
sim_total_refs             45959960 # total number of loads and stores executed
sim_total_loads            29429717 # total number of loads executed
sim_total_stores       16530243.0000 # total number of stores executed
sim_total_branches         11225005 # total number of branches executed
sim_cycle                  50807026 # total simulation time in cycles
sim_IPC                      1.9682 # instructions per cycle
sim_CPI                      0.5081 # cycles per instruction
sim_exec_BW                  1.9682 # total instructions (mis-spec + committed) per cycle
sim_IPB                      8.9087 # instruction per branch
IFQ_count                 197547114 # cumulative IFQ occupancy
IFQ_fcount                 49193001 # cumulative IFQ full count
ifq_occupancy                3.8882 # avg IFQ occupancy (insn's)
ifq_rate                     1.9682 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  1.9755 # avg IFQ occupant latency (cycle's)
ifq_full                     0.9682 # fraction of time (cycle's) IFQ was full
RUU_count                 870746724 # cumulative RUU occupancy
RUU_fcount                     5023 # cumulative RUU full count
ruu_occupancy               17.1383 # avg RUU occupancy (insn's)
ruu_rate                     1.9682 # avg RUU dispatch rate (insn/cycle)
ruu_latency                  8.7075 # avg RUU occupant latency (cycle's)
ruu_full                     0.0001 # fraction of time (cycle's) RUU was full
LSQ_count                 347845579 # cumulative LSQ occupancy
LSQ_fcount                 29522751 # cumulative LSQ full count
lsq_occupancy                6.8464 # avg LSQ occupancy (insn's)
lsq_rate                     1.9682 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  3.4785 # avg LSQ occupant latency (cycle's)
lsq_full                     0.5811 # fraction of time (cycle's) LSQ was full
sim_slip                 1364551923 # total number of slip cycles
avg_sim_slip                13.6455 # the average slip between issue and retirement
il1.accesses              113480044 # total number of accesses
il1.hits                  112857238 # total number of hits
il1.misses                   622806 # total number of misses
il1.replacements             622550 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0055 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0055 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               45308806 # total number of accesses
dl1.hits                   45048467 # total number of hits
dl1.misses                   260339 # total number of misses
dl1.replacements             260083 # total number of replacements
dl1.writebacks                62023 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0057 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0057 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0014 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl2.accesses                 945168 # total number of accesses
dl2.hits                     936813 # total number of hits
dl2.misses                     8355 # total number of misses
dl2.replacements               6307 # total number of replacements
dl2.writebacks                 2799 # total number of writebacks
dl2.invalidations                 0 # total number of invalidations
dl2.miss_rate                0.0088 # miss rate (i.e., misses/ref)
dl2.repl_rate                0.0067 # replacement rate (i.e., repls/ref)
dl2.wb_rate                  0.0030 # writeback rate (i.e., wrbks/ref)
dl2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             113480044 # total number of accesses
itlb.hits                 113479783 # total number of hits
itlb.misses                     261 # total number of misses
itlb.replacements               197 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses              45959959 # total number of accesses
dtlb.hits                  45959842 # total number of hits
dtlb.misses                     117 # total number of misses
dtlb.replacements                 6 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           27976655.5250 # total power usage of rename unit
bpred_power            169517058.7729 # total power usage of bpred unit
window_power           297669040.4681 # total power usage of instruction window
lsq_power              82468898.5230 # total power usage of load/store queue
regfile_power          181506683.0876 # total power usage of arch. regfile
icache_power           154075510.0996 # total power usage of icache
dcache_power           327130984.2528 # total power usage of dcache
dcache2_power          157653021.4285 # total power usage of dcache2
alu_power              962344792.4191 # total power usage of alu
falu_power             725577422.4515 # total power usage of falu
resultbus_power        185171671.6498 # total power usage of resultbus
clock_power            1488789390.3475 # total power usage of clock
avg_rename_power             0.5506 # avg power usage of rename unit
avg_bpred_power              3.3365 # avg power usage of bpred unit
avg_window_power             5.8588 # avg power usage of instruction window
avg_lsq_power                1.6232 # avg power usage of lsq
avg_regfile_power            3.5725 # avg power usage of arch. regfile
avg_icache_power             3.0326 # avg power usage of icache
avg_dcache_power             6.4387 # avg power usage of dcache
avg_dcache2_power            3.1030 # avg power usage of dcache2
avg_alu_power               18.9412 # avg power usage of alu
avg_falu_power              14.2810 # avg power usage of falu
avg_resultbus_power          3.6446 # avg power usage of resultbus
avg_clock_power             29.3028 # avg power usage of clock
fetch_stage_power      323592568.8726 # total power usage of fetch stage
dispatch_stage_power   27976655.5250 # total power usage of dispatch stage
issue_stage_power      2012438408.7413 # total power usage of issue stage
avg_fetch_power              6.3691 # average power of fetch unit per cycle
avg_dispatch_power           0.5506 # average power of dispatch unit per cycle
avg_issue_power             39.6095 # average power of issue unit per cycle
total_power            4034303706.5739 # total power per cycle
avg_total_power_cycle       79.4044 # average total power per cycle
avg_total_power_cycle_nofp_nod2      62.0204 # average total power per cycle
avg_total_power_insn        40.3430 # average total power per insn
avg_total_power_insn_nofp_nod2      31.5107 # average total power per insn
rename_power_cc1       18917460.9620 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       265471427.7314 # total power usage of instruction window_cc1
lsq_power_cc1          22317841.5201 # total power usage of lsq_cc1
regfile_power_cc1      123350628.5886 # total power usage of arch. regfile_cc1
icache_power_cc1       105292566.5295 # total power usage of icache_cc1
dcache_power_cc1       187260040.6679 # total power usage of dcache_cc1
dcache2_power_cc1      2703539.8812 # total power usage of dcache2_cc1
alu_power_cc1          346774574.2024 # total power usage of alu_cc1
resultbus_power_cc1    150300329.8665 # total power usage of resultbus_cc1
clock_power_cc1        733528349.6866 # total power usage of clock_cc1
avg_rename_power_cc1         0.3723 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1         5.2251 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.4393 # avg power usage of lsq_cc1
avg_regfile_power_cc1        2.4278 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         2.0724 # avg power usage of icache_cc1
avg_dcache_power_cc1         3.6857 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0532 # avg power usage of dcache2_cc1
avg_alu_power_cc1            6.8253 # avg power usage of alu_cc1
avg_resultbus_power_cc1       2.9583 # avg power usage of resultbus_cc1
avg_clock_power_cc1         14.4375 # avg power usage of clock_cc1
fetch_stage_power_cc1  105292566.5295 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 18917460.9620 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  974827753.8695 # total power usage of issue stage_cc1
avg_fetch_power_cc1          2.0724 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.3723 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1         19.1869 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  1955916759.6362 # total power per cycle_cc1
avg_total_power_cycle_cc1      38.4970 # average total power per cycle_cc1
avg_total_power_insn_cc1      19.5592 # average total power per insn_cc1
rename_power_cc2       13766135.1865 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       216830000.6344 # total power usage of instruction window_cc2
lsq_power_cc2          15544613.4436 # total power usage of lsq_cc2
regfile_power_cc2      40371486.0505 # total power usage of arch. regfile_cc2
icache_power_cc2       105292566.5295 # total power usage of icache_cc2
dcache_power_cc2       145864809.1046 # total power usage of dcache_cc2
dcache2_power_cc2      1466417.1749 # total power usage of dcache2_cc2
alu_power_cc2          150684758.8207 # total power usage of alu_cc2
resultbus_power_cc2    100971038.9541 # total power usage of resultbus_cc2
clock_power_cc2        477737757.3745 # total power usage of clock_cc2
avg_rename_power_cc2         0.2709 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         4.2677 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.3060 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.7946 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         2.0724 # avg power usage of icache_cc2
avg_dcache_power_cc2         2.8710 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0289 # avg power usage of dcache2_cc2
avg_alu_power_cc2            2.9658 # avg power usage of alu_cc2
avg_resultbus_power_cc2       1.9873 # avg power usage of resultbus_cc2
avg_clock_power_cc2          9.4030 # avg power usage of clock_cc2
fetch_stage_power_cc2  105292566.5295 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 13766135.1865 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  631361638.1322 # total power usage of issue stage_cc2
avg_fetch_power_cc2          2.0724 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.2709 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2         12.4267 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  1268529583.2733 # total power per cycle_cc2
avg_total_power_cycle_cc2      24.9676 # average total power per cycle_cc2
avg_total_power_insn_cc2      12.6853 # average total power per insn_cc2
rename_power_cc3       14672054.6392 # total power usage of rename unit_cc3
bpred_power_cc3        16951705.8748 # total power usage of bpred unit_cc3
window_power_cc3       219057173.7293 # total power usage of instruction window_cc3
lsq_power_cc3          21355044.7184 # total power usage of lsq_cc3
regfile_power_cc3      44285567.9449 # total power usage of arch. regfile_cc3
icache_power_cc3       110170860.8600 # total power usage of icache_cc3
dcache_power_cc3       160914626.3048 # total power usage of dcache_cc3
dcache2_power_cc3      16962383.7406 # total power usage of dcache2_cc3
alu_power_cc3          212241780.3784 # total power usage of alu_cc3
resultbus_power_cc3    103622508.0797 # total power usage of resultbus_cc3
clock_power_cc3        551549828.0297 # total power usage of clock_cc3
avg_rename_power_cc3         0.2888 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.3336 # avg power usage of bpred unit_cc3
avg_window_power_cc3         4.3116 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.4203 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        0.8716 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         2.1684 # avg power usage of icache_cc3
avg_dcache_power_cc3         3.1672 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.3339 # avg power usage of dcache2_cc3
avg_alu_power_cc3            4.1774 # avg power usage of alu_cc3
avg_resultbus_power_cc3       2.0395 # avg power usage of resultbus_cc3
avg_clock_power_cc3         10.8558 # avg power usage of clock_cc3
fetch_stage_power_cc3  127122566.7348 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 14672054.6392 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  734153516.9512 # total power usage of issue stage_cc3
avg_fetch_power_cc3          2.5021 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.2888 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3         14.4498 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  1471783534.2998 # total power per cycle_cc3
avg_total_power_cycle_cc3      28.9681 # average total power per cycle_cc3
avg_total_power_insn_cc3      14.7178 # average total power per insn_cc3
total_rename_access       100000000 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access       399703169 # total number accesses of instruction window
total_lsq_access           46611112 # total number accesses of load/store queue
total_regfile_access      158421077 # total number accesses of arch. regfile
total_icache_access       113480044 # total number accesses of icache
total_dcache_access        45308806 # total number accesses of dcache
total_dcache2_access         945168 # total number accesses of dcache2
total_alu_access           99880646 # total number accesses of alu
total_resultbus_access    118204706 # total number accesses of resultbus
avg_rename_access            1.9682 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            7.8671 # avg number accesses of instruction window
avg_lsq_access               0.9174 # avg number accesses of lsq
avg_regfile_access           3.1181 # avg number accesses of arch. regfile
avg_icache_access            2.2336 # avg number accesses of icache
avg_dcache_access            0.8918 # avg number accesses of dcache
avg_dcache2_access           0.0186 # avg number accesses of dcache2
avg_alu_access               1.9659 # avg number accesses of alu
avg_resultbus_access         2.3265 # avg number accesses of resultbus
max_rename_access                 4 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                19 # max number accesses of instruction window
max_lsq_access                    6 # max number accesses of load/store queue
max_regfile_access               12 # max number accesses of arch. regfile
max_icache_access                 4 # max number accesses of icache
max_dcache_access                 4 # max number accesses of dcache
max_dcache2_access                5 # max number accesses of dcache2
max_alu_access                    4 # max number accesses of alu
max_resultbus_access              8 # max number accesses of resultbus
max_cycle_power_cc1         66.0269 # maximum cycle power usage of cc1
max_cycle_power_cc2         45.4137 # maximum cycle power usage of cc2
max_cycle_power_cc3         47.2525 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                 794624 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size                 216592 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x012002d410 # program entry point (initial PC)
ld_environ_base        0x011ff97000 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                  148 # total number of pages allocated
mem.page_mem                  1184k # total size of memory pages allocated
mem.ptab_misses              583370 # total first level page table misses
mem.ptab_accesses         866339928 # total page table accesses
mem.ptab_miss_rate           0.0007 # first level page table miss rate

