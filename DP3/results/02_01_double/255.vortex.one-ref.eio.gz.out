sim-outorder: SimpleScalar/Alpha Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 8
Window Size: 32
Number of Virtual Registers: 32
Number of Physical Registers: 32
Datapath Width: 64
Total Power Consumption: 144.023
Branch Predictor Power Consumption: 2.79653  (1.97%)
 branch target buffer power (W): 2.49493
 local predict power (W): 0.0348099
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 1.12203  (0.79%)
 Instruction Decode Power (W): 0.0319831
 RAT decode_power (W): 0.227029
 RAT wordline_power (W): 0.0802046
 RAT bitline_power (W): 0.731915
 DCL Comparators (W): 0.0509018
Instruction Window Power Consumption: 10.115  (7.12%)
 tagdrive (W): 0.483157
 tagmatch (W): 0.177897
 Selection Logic (W): 0.0590554
 decode_power (W): 0.227029
 wordline_power (W): 0.288569
 bitline_power (W): 8.87931
Load/Store Queue Power Consumption: 3.94434  (2.78%)
 tagdrive (W): 1.48696
 tagmatch (W): 0.429783
 decode_power (W): 0.0355002
 wordline_power (W): 0.0433172
 bitline_power (W): 1.94878
Arch. Register File Power Consumption: 9.39491  (6.62%)
 decode_power (W): 0.227029
 wordline_power (W): 0.288569
 bitline_power (W): 8.87931
Result Bus Power Consumption: 10.7012  (7.53%)
Total Clock Power: 47.0531  (33.1%)
Int ALU Power: 9.32026  (6.56%)
FP ALU Power: 28.5621  (20.1%)
Instruction Cache Power Consumption: 2.76773  (1.95%)
 decode_power (W): 0.151353
 wordline_power (W): 0.180479
 bitline_power (W): 1.42251
 senseamp_power (W): 0.768
 tagarray_power (W): 0.245382
Itlb_power (W): 0.264936 (0.187%)
Data Cache Power Consumption: 11.0709  (7.8%)
 decode_power (W): 0.60541
 wordline_power (W): 0.721917
 bitline_power (W): 5.69006
 senseamp_power (W): 3.072
 tagarray_power (W): 0.981529
Dtlb_power (W): 1.80688 (1.27%)
Level 2 Cache Power Consumption: 3.10298 (2.18%)
 decode_power (W): 0.19487
 wordline_power (W): 0.0430878
 bitline_power (W): 1.77274
 senseamp_power (W): 0.192
 tagarray_power (W): 0.900275
sim: loading EIO file: ../benchmarks/255.vortex.one-ref.eio.gz
sim: command line: ./sim-outorder -config ../configs/current.config ../benchmarks/255.vortex.one-ref.eio.gz 

sim: simulation started @ Mon Nov 23 19:17:57 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     ../results/02_01_double/255.vortex.one-ref.eio.gz.out # redirect simulator output to file (non-interactive only)
# -redir:prog       /dev/null # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-freq            600000000.0000 # frequency             
-max:inst           100000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize              8 # instruction fetch queue size (in insts)
-fetch:mplat                1 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 256 2 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width               8 # instruction decode B/W (insts/cycle)
-issue:width                8 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width               8 # instruction commit B/W (insts/cycle)
-ruu:size                  32 # register update unit (RUU) size
-lsq:size                  16 # load/store queue (LSQ) size
-cache:dl1       dl1:32:64:8:f # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       dl2:256:64:8:f # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               2 # l2 data cache hit latency (in cycles)
-cache:il1       il1:32:64:8:f # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               2 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         103 1 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   8 # total number of integer ALU's available
-res:imult                  2 # total number of integer multiplier/dividers available
-res:memport                4 # total number of memory system ports available (to CPU)
-res:fpalu                  8 # total number of floating point ALU's available
-res:fpmult                 2 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn              100000000 # total number of instructions committed
sim_num_refs               39733914 # total number of loads and stores committed
sim_num_loads              26491577 # total number of loads committed
sim_num_stores         13242337.0000 # total number of stores committed
sim_num_branches           17614916 # total number of branches committed
sim_elapsed_time                116 # total simulation time in seconds
sim_inst_rate           862068.9655 # simulation speed (in insts/sec)
sim_total_insn            100000000 # total number of instructions executed
sim_total_refs             39733914 # total number of loads and stores executed
sim_total_loads            26491577 # total number of loads executed
sim_total_stores       13242337.0000 # total number of stores executed
sim_total_branches         17614916 # total number of branches executed
sim_cycle                  64986868 # total simulation time in cycles
sim_IPC                      1.5388 # instructions per cycle
sim_CPI                      0.6499 # cycles per instruction
sim_exec_BW                  1.5388 # total instructions (mis-spec + committed) per cycle
sim_IPB                      5.6770 # instruction per branch
IFQ_count                 374673455 # cumulative IFQ occupancy
IFQ_fcount                 46542046 # cumulative IFQ full count
ifq_occupancy                5.7654 # avg IFQ occupancy (insn's)
ifq_rate                     1.5388 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  3.7467 # avg IFQ occupant latency (cycle's)
ifq_full                     0.7162 # fraction of time (cycle's) IFQ was full
RUU_count                1468291069 # cumulative RUU occupancy
RUU_fcount                 30455502 # cumulative RUU full count
ruu_occupancy               22.5937 # avg RUU occupancy (insn's)
ruu_rate                     1.5388 # avg RUU dispatch rate (insn/cycle)
ruu_latency                 14.6829 # avg RUU occupant latency (cycle's)
ruu_full                     0.4686 # fraction of time (cycle's) RUU was full
LSQ_count                 548618613 # cumulative LSQ occupancy
LSQ_fcount                  5541594 # cumulative LSQ full count
lsq_occupancy                8.4420 # avg LSQ occupancy (insn's)
lsq_rate                     1.5388 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  5.4862 # avg LSQ occupant latency (cycle's)
lsq_full                     0.0853 # fraction of time (cycle's) LSQ was full
sim_slip                 2156643301 # total number of slip cycles
avg_sim_slip                21.5664 # the average slip between issue and retirement
il1.accesses              133593852 # total number of accesses
il1.hits                  133036507 # total number of hits
il1.misses                   557345 # total number of misses
il1.replacements             557089 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0042 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0042 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               38949135 # total number of accesses
dl1.hits                   38465061 # total number of hits
dl1.misses                   484074 # total number of misses
dl1.replacements             483818 # total number of replacements
dl1.writebacks                78542 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0124 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0124 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0020 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl2.accesses                1119961 # total number of accesses
dl2.hits                     691357 # total number of hits
dl2.misses                   428604 # total number of misses
dl2.replacements             426556 # total number of replacements
dl2.writebacks                37818 # total number of writebacks
dl2.invalidations                 0 # total number of invalidations
dl2.miss_rate                0.3827 # miss rate (i.e., misses/ref)
dl2.repl_rate                0.3809 # replacement rate (i.e., repls/ref)
dl2.wb_rate                  0.0338 # writeback rate (i.e., wrbks/ref)
dl2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             133593852 # total number of accesses
itlb.hits                 133587966 # total number of hits
itlb.misses                    5886 # total number of misses
itlb.replacements              5823 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses              39733908 # total number of accesses
dtlb.hits                  39627417 # total number of hits
dtlb.misses                  106491 # total number of misses
dtlb.replacements            106363 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0027 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0027 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           72917397.5164 # total power usage of rename unit
bpred_power            181737583.8929 # total power usage of bpred unit
window_power           657343236.9707 # total power usage of instruction window
lsq_power              256330282.4430 # total power usage of load/store queue
regfile_power          610545585.4811 # total power usage of arch. regfile
icache_power           197083347.3594 # total power usage of icache
dcache_power           836887637.5488 # total power usage of dcache
dcache2_power          201652741.7455 # total power usage of dcache2
alu_power              2461855335.4955 # total power usage of alu
falu_power             1856160767.1590 # total power usage of falu
resultbus_power        695436704.7183 # total power usage of resultbus
clock_power            3057833521.4955 # total power usage of clock
avg_rename_power             1.1220 # avg power usage of rename unit
avg_bpred_power              2.7965 # avg power usage of bpred unit
avg_window_power            10.1150 # avg power usage of instruction window
avg_lsq_power                3.9443 # avg power usage of lsq
avg_regfile_power            9.3949 # avg power usage of arch. regfile
avg_icache_power             3.0327 # avg power usage of icache
avg_dcache_power            12.8778 # avg power usage of dcache
avg_dcache2_power            3.1030 # avg power usage of dcache2
avg_alu_power               37.8824 # avg power usage of alu
avg_falu_power              28.5621 # avg power usage of falu
avg_resultbus_power         10.7012 # avg power usage of resultbus
avg_clock_power             47.0531 # avg power usage of clock
fetch_stage_power      378820931.2524 # total power usage of fetch stage
dispatch_stage_power   72917397.5164 # total power usage of dispatch stage
issue_stage_power      5109505938.9218 # total power usage of issue stage
avg_fetch_power              5.8292 # average power of fetch unit per cycle
avg_dispatch_power           1.1220 # average power of dispatch unit per cycle
avg_issue_power             78.6237 # average power of issue unit per cycle
total_power            9229623374.6671 # total power per cycle
avg_total_power_cycle      142.0229 # average total power per cycle
avg_total_power_cycle_nofp_nod2     110.3578 # average total power per cycle
avg_total_power_insn        92.2962 # average total power per insn
avg_total_power_insn_nofp_nod2      71.7181 # average total power per insn
rename_power_cc1       24512809.3777 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       243947639.3085 # total power usage of instruction window_cc1
lsq_power_cc1          39572793.3841 # total power usage of lsq_cc1
regfile_power_cc1      190235123.3764 # total power usage of arch. regfile_cc1
icache_power_cc1       66964806.9543 # total power usage of icache_cc1
dcache_power_cc1       221854260.8030 # total power usage of dcache_cc1
dcache2_power_cc1      3105273.7507 # total power usage of dcache2_cc1
alu_power_cc1          224685618.7508 # total power usage of alu_cc1
resultbus_power_cc1    245997823.3424 # total power usage of resultbus_cc1
clock_power_cc1        634733686.4395 # total power usage of clock_cc1
avg_rename_power_cc1         0.3772 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1         3.7538 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.6089 # avg power usage of lsq_cc1
avg_regfile_power_cc1        2.9273 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         1.0304 # avg power usage of icache_cc1
avg_dcache_power_cc1         3.4138 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0478 # avg power usage of dcache2_cc1
avg_alu_power_cc1            3.4574 # avg power usage of alu_cc1
avg_resultbus_power_cc1       3.7853 # avg power usage of resultbus_cc1
avg_clock_power_cc1          9.7671 # avg power usage of clock_cc1
fetch_stage_power_cc1  66964806.9543 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 24512809.3777 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  979163409.3394 # total power usage of issue stage_cc1
avg_fetch_power_cc1          1.0304 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.3772 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1         15.0671 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  1895609835.4873 # total power per cycle_cc1
avg_total_power_cycle_cc1      29.1691 # average total power per cycle_cc1
avg_total_power_insn_cc1      18.9561 # average total power per insn_cc1
rename_power_cc2       14025410.0159 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       186402610.6442 # total power usage of instruction window_cc2
lsq_power_cc2          18985101.5621 # total power usage of lsq_cc2
regfile_power_cc2      44573827.1452 # total power usage of arch. regfile_cc2
icache_power_cc2       66964806.9543 # total power usage of icache_cc2
dcache_power_cc2       125394754.8329 # total power usage of dcache_cc2
dcache2_power_cc2       868803.2422 # total power usage of dcache2_cc2
alu_power_cc2          116668300.4883 # total power usage of alu_cc2
resultbus_power_cc2    136536270.6258 # total power usage of resultbus_cc2
clock_power_cc2        358222734.9841 # total power usage of clock_cc2
avg_rename_power_cc2         0.2158 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         2.8683 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.2921 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.6859 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         1.0304 # avg power usage of icache_cc2
avg_dcache_power_cc2         1.9295 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0134 # avg power usage of dcache2_cc2
avg_alu_power_cc2            1.7953 # avg power usage of alu_cc2
avg_resultbus_power_cc2       2.1010 # avg power usage of resultbus_cc2
avg_clock_power_cc2          5.5122 # avg power usage of clock_cc2
fetch_stage_power_cc2  66964806.9543 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 14025410.0159 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  584855841.3954 # total power usage of issue stage_cc2
avg_fetch_power_cc2          1.0304 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.2158 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2          8.9996 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  1068642620.4950 # total power per cycle_cc2
avg_total_power_cycle_cc2      16.4440 # average total power per cycle_cc2
avg_total_power_insn_cc2      10.6864 # average total power per insn_cc2
rename_power_cc3       18865868.8299 # total power usage of rename unit_cc3
bpred_power_cc3        18173758.4143 # total power usage of bpred unit_cc3
window_power_cc3       226354226.2743 # total power usage of instruction window_cc3
lsq_power_cc3          40613265.9510 # total power usage of lsq_cc3
regfile_power_cc3      84464077.3471 # total power usage of arch. regfile_cc3
icache_power_cc3       79976661.0792 # total power usage of icache_cc3
dcache_power_cc3       187333867.2853 # total power usage of dcache_cc3
dcache2_power_cc3      20723566.8723 # total power usage of dcache2_cc3
alu_power_cc3          340385271.3632 # total power usage of alu_cc3
resultbus_power_cc3    179842077.4857 # total power usage of resultbus_cc3
clock_power_cc3        598121503.5189 # total power usage of clock_cc3
avg_rename_power_cc3         0.2903 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.2797 # avg power usage of bpred unit_cc3
avg_window_power_cc3         3.4831 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.6249 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        1.2997 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.2307 # avg power usage of icache_cc3
avg_dcache_power_cc3         2.8826 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.3189 # avg power usage of dcache2_cc3
avg_alu_power_cc3            5.2378 # avg power usage of alu_cc3
avg_resultbus_power_cc3       2.7674 # avg power usage of resultbus_cc3
avg_clock_power_cc3          9.2037 # avg power usage of clock_cc3
fetch_stage_power_cc3  98150419.4935 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 18865868.8299 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  995252275.2318 # total power usage of issue stage_cc3
avg_fetch_power_cc3          1.5103 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.2903 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3         15.3147 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  1794854144.4212 # total power per cycle_cc3
avg_total_power_cycle_cc3      27.6187 # average total power per cycle_cc3
avg_total_power_insn_cc3      17.9485 # average total power per insn_cc3
total_rename_access       100000000 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access       379743064 # total number accesses of instruction window
total_lsq_access           40518682 # total number accesses of load/store queue
total_regfile_access      127291951 # total number accesses of arch. regfile
total_icache_access       133593852 # total number accesses of icache
total_dcache_access        38949135 # total number accesses of dcache
total_dcache2_access        1119961 # total number accesses of dcache2
total_alu_access           99935308 # total number accesses of alu
total_resultbus_access    108876649 # total number accesses of resultbus
avg_rename_access            1.5388 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            5.8434 # avg number accesses of instruction window
avg_lsq_access               0.6235 # avg number accesses of lsq
avg_regfile_access           1.9587 # avg number accesses of arch. regfile
avg_icache_access            2.0557 # avg number accesses of icache
avg_dcache_access            0.5993 # avg number accesses of dcache
avg_dcache2_access           0.0172 # avg number accesses of dcache2
avg_alu_access               1.5378 # avg number accesses of alu
avg_resultbus_access         1.6754 # avg number accesses of resultbus
max_rename_access                 8 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                33 # max number accesses of instruction window
max_lsq_access                   10 # max number accesses of load/store queue
max_regfile_access               22 # max number accesses of arch. regfile
max_icache_access                 8 # max number accesses of icache
max_dcache_access                 8 # max number accesses of dcache
max_dcache2_access                7 # max number accesses of dcache2
max_alu_access                    8 # max number accesses of alu
max_resultbus_access             13 # max number accesses of resultbus
max_cycle_power_cc1         98.4022 # maximum cycle power usage of cc1
max_cycle_power_cc2         68.0538 # maximum cycle power usage of cc2
max_cycle_power_cc3         75.0711 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                 819200 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size                 118976 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x01200336a8 # program entry point (initial PC)
ld_environ_base        0x011ff96490 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                 7515 # total number of pages allocated
mem.page_mem                 60120k # total size of memory pages allocated
mem.ptab_misses               12525 # total first level page table misses
mem.ptab_accesses         867447298 # total page table accesses
mem.ptab_miss_rate           0.0000 # first level page table miss rate

