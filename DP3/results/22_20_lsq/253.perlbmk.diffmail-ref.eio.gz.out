sim-outorder: SimpleScalar/Alpha Tool Set version 3.0 of August, 2003.
Copyright (c) 1994-2003 by Todd M. Austin, Ph.D. and SimpleScalar, LLC.
All Rights Reserved. This version of SimpleScalar is licensed for academic
non-commercial use.  No portion of this work may be used by any commercial
entity, or for any commercial purpose, without the prior written permission
of SimpleScalar, LLC (info@simplescalar.com).


Processor Parameters:
Issue Width: 16
Window Size: 64
Number of Virtual Registers: 32
Number of Physical Registers: 64
Datapath Width: 64
Total Power Consumption: 225.973
Branch Predictor Power Consumption: 2.84842  (1.27%)
 branch target buffer power (W): 2.49493
 local predict power (W): 0.0867068
 global predict power (W): 0.0996078
 chooser power (W): 0.0702439
 RAS power (W): 0.0969383
Rename Logic Power Consumption: 3.27072  (1.46%)
 Instruction Decode Power (W): 0.0639661
 RAT decode_power (W): 0.454058
 RAT wordline_power (W): 0.227603
 RAT bitline_power (W): 2.30694
 DCL Comparators (W): 0.218151
Instruction Window Power Consumption: 43.216  (19.3%)
 tagdrive (W): 2.9395
 tagmatch (W): 0.989695
 Selection Logic (W): 0.225484
 decode_power (W): 0.976583
 wordline_power (W): 1.0557
 bitline_power (W): 37.0291
Load/Store Queue Power Consumption: 4.67088  (2.09%)
 tagdrive (W): 1.48696
 tagmatch (W): 0.429783
 decode_power (W): 0.0355002
 wordline_power (W): 0.0433172
 bitline_power (W): 2.67532
Arch. Register File Power Consumption: 25.1387  (11.2%)
 decode_power (W): 0.454058
 wordline_power (W): 1.0557
 bitline_power (W): 23.629
Result Bus Power Consumption: 31.3281  (14%)
Total Clock Power: 61.2642  (27.4%)
Int ALU Power: 4.66013  (2.08%)
FP ALU Power: 28.5621  (12.8%)
Instruction Cache Power Consumption: 2.76773  (1.24%)
 decode_power (W): 0.151353
 wordline_power (W): 0.180479
 bitline_power (W): 1.42251
 senseamp_power (W): 0.768
 tagarray_power (W): 0.245382
Itlb_power (W): 0.264936 (0.118%)
Data Cache Power Consumption: 11.0709  (4.94%)
 decode_power (W): 0.60541
 wordline_power (W): 0.721917
 bitline_power (W): 5.69006
 senseamp_power (W): 3.072
 tagarray_power (W): 0.981529
Dtlb_power (W): 1.80688 (0.807%)
Level 2 Cache Power Consumption: 3.10298 (1.39%)
 decode_power (W): 0.19487
 wordline_power (W): 0.0430878
 bitline_power (W): 1.77274
 senseamp_power (W): 0.192
 tagarray_power (W): 0.900275
sim: loading EIO file: ../benchmarks/253.perlbmk.diffmail-ref.eio.gz
sim: command line: ./sim-outorder -config ../configs/current.config ../benchmarks/253.perlbmk.diffmail-ref.eio.gz 

sim: simulation started @ Tue Nov 24 11:51:31 2015, options follow:

sim-outorder: This simulator implements a very detailed out-of-order issue
superscalar processor with a two-level memory system and speculative
execution support.  This simulator is a performance simulator, tracking the
latency of all pipeline operations.

# -config                     # load configuration from a file
# -dumpconfig                 # dump configuration to a file
# -h                    false # print help message    
# -v                    false # verbose operation     
# -d                    false # enable debug message  
# -i                    false # start in Dlite debugger
-seed                       1 # random number generator seed (0 for timer seed)
# -q                    false # initialize and terminate immediately
# -chkpt               <null> # restore EIO trace execution from <fname>
# -redir:sim     ../results/22_20_lsq/253.perlbmk.diffmail-ref.eio.gz.out # redirect simulator output to file (non-interactive only)
# -redir:prog       /dev/null # redirect simulated program output to file
-nice                       0 # simulator scheduling priority
-freq            600000000.0000 # frequency             
-max:inst           100000000 # maximum number of inst's to execute
-fastfwd                    0 # number of insts skipped before timing starts
# -ptrace              <null> # generate pipetrace, i.e., <fname|stdout|stderr> <range>
-fetch:ifqsize             16 # instruction fetch queue size (in insts)
-fetch:mplat               15 # extra branch mis-prediction latency
-fetch:speed                1 # speed of front-end of machine relative to execution core
-bpred                perfect # branch predictor type {nottaken|taken|perfect|bimod|2lev|comb}
-bpred:bimod     2048 # bimodal predictor config (<table size>)
-bpred:2lev      1 1024 4 0 # 2-level predictor config (<l1size> <l2size> <hist_size> <xor>)
-bpred:comb      1024 # combining predictor config (<meta_table_size>)
-bpred:ras                  8 # return address stack size (0 for no return stack)
-bpred:btb       512 4 # BTB config (<num_sets> <associativity>)
# -bpred:spec_update       <null> # speculative predictors update in {ID|WB} (default non-spec)
-decode:width              16 # instruction decode B/W (insts/cycle)
-issue:width               16 # instruction issue B/W (insts/cycle)
-issue:inorder          false # run pipeline with in-order issue
-issue:wrongpath         true # issue instructions down wrong execution paths
-commit:width              16 # instruction commit B/W (insts/cycle)
-ruu:size                  64 # register update unit (RUU) size
-lsq:size                  16 # load/store queue (LSQ) size
-cache:dl1       dl1:32:64:8:f # l1 data cache config, i.e., {<config>|none}
-cache:dl1lat               1 # l1 data cache hit latency (in cycles)
-cache:dl2       dl2:256:64:8:f # l2 data cache config, i.e., {<config>|none}
-cache:dl2lat               2 # l2 data cache hit latency (in cycles)
-cache:il1       il1:32:64:8:f # l1 inst cache config, i.e., {<config>|dl1|dl2|none}
-cache:il1lat               1 # l1 instruction cache hit latency (in cycles)
-cache:il2                dl2 # l2 instruction cache config, i.e., {<config>|dl2|none}
-cache:il2lat               2 # l2 instruction cache hit latency (in cycles)
-cache:flush            false # flush caches on system calls
-cache:icompress        false # convert 64-bit inst addresses to 32-bit inst equivalents
-mem:lat         103 1 # memory access latency (<first_chunk> <inter_chunk>)
-mem:width                  8 # memory access bus width (in bytes)
-tlb:itlb        itlb:16:4096:4:l # instruction TLB config, i.e., {<config>|none}
-tlb:dtlb        dtlb:32:4096:4:l # data TLB config, i.e., {<config>|none}
-tlb:lat                   30 # inst/data TLB miss latency (in cycles)
-res:ialu                   4 # total number of integer ALU's available
-res:imult                  2 # total number of integer multiplier/dividers available
-res:memport                4 # total number of memory system ports available (to CPU)
-res:fpalu                  8 # total number of floating point ALU's available
-res:fpmult                 2 # total number of floating point multiplier/dividers available
# -pcstat              <null> # profile stat(s) against text addr's (mult uses ok)
-bugcompat              false # operate in backward-compatible bugs mode (for testing only)

  Pipetrace range arguments are formatted as follows:

    {{@|#}<start>}:{{@|#|+}<end>}

  Both ends of the range are optional, if neither are specified, the entire
  execution is traced.  Ranges that start with a `@' designate an address
  range to be traced, those that start with an `#' designate a cycle count
  range.  All other range values represent an instruction count range.  The
  second argument, if specified with a `+', indicates a value relative
  to the first argument, e.g., 1000:+100 == 1000:1100.  Program symbols may
  be used in all contexts.

    Examples:   -ptrace FOO.trc #0:#1000
                -ptrace BAR.trc @2000:
                -ptrace BLAH.trc :1500
                -ptrace UXXE.trc :
                -ptrace FOOBAR.trc @main:+278

  Branch predictor configuration examples for 2-level predictor:
    Configurations:   N, M, W, X
      N   # entries in first level (# of shift register(s))
      W   width of shift register(s)
      M   # entries in 2nd level (# of counters, or other FSM)
      X   (yes-1/no-0) xor history and address for 2nd level index
    Sample predictors:
      GAg     : 1, W, 2^W, 0
      GAp     : 1, W, M (M > 2^W), 0
      PAg     : N, W, 2^W, 0
      PAp     : N, W, M (M == 2^(N+W)), 0
      gshare  : 1, W, 2^W, 1
  Predictor `comb' combines a bimodal and a 2-level predictor.

  The cache config parameter <config> has the following format:

    <name>:<nsets>:<bsize>:<assoc>:<repl>

    <name>   - name of the cache being defined
    <nsets>  - number of sets in the cache
    <bsize>  - block size of the cache
    <assoc>  - associativity of the cache
    <repl>   - block replacement strategy, 'l'-LRU, 'f'-FIFO, 'r'-random

    Examples:   -cache:dl1 dl1:4096:32:1:l
                -dtlb dtlb:128:4096:32:r

  Cache levels can be unified by pointing a level of the instruction cache
  hierarchy at the data cache hiearchy using the "dl1" and "dl2" cache
  configuration arguments.  Most sensible combinations are supported, e.g.,

    A unified l2 cache (il2 is pointed at dl2):
      -cache:il1 il1:128:64:1:l -cache:il2 dl2
      -cache:dl1 dl1:256:32:1:l -cache:dl2 ul2:1024:64:2:l

    Or, a fully unified cache hierarchy (il1 pointed at dl1):
      -cache:il1 dl1
      -cache:dl1 ul1:256:32:1:l -cache:dl2 ul2:1024:64:2:l



sim: ** starting performance simulation **

sim: ** simulation statistics **
sim_num_insn              100000001 # total number of instructions committed
sim_num_refs               46161587 # total number of loads and stores committed
sim_num_loads              29759422 # total number of loads committed
sim_num_stores         16402165.0000 # total number of stores committed
sim_num_branches           14085061 # total number of branches committed
sim_elapsed_time                124 # total simulation time in seconds
sim_inst_rate           806451.6210 # simulation speed (in insts/sec)
sim_total_insn            100000001 # total number of instructions executed
sim_total_refs             46161587 # total number of loads and stores executed
sim_total_loads            29759422 # total number of loads executed
sim_total_stores       16402165.0000 # total number of stores executed
sim_total_branches         14085061 # total number of branches executed
sim_cycle                  69694633 # total simulation time in cycles
sim_IPC                      1.4348 # instructions per cycle
sim_CPI                      0.6969 # cycles per instruction
sim_exec_BW                  1.4348 # total instructions (mis-spec + committed) per cycle
sim_IPB                      7.0997 # instruction per branch
IFQ_count                 661093881 # cumulative IFQ occupancy
IFQ_fcount                 40369262 # cumulative IFQ full count
ifq_occupancy                9.4856 # avg IFQ occupancy (insn's)
ifq_rate                     1.4348 # avg IFQ dispatch rate (insn/cycle)
ifq_latency                  6.6109 # avg IFQ occupant latency (cycle's)
ifq_full                     0.5792 # fraction of time (cycle's) IFQ was full
RUU_count                1464228441 # cumulative RUU occupancy
RUU_fcount                   321581 # cumulative RUU full count
ruu_occupancy               21.0092 # avg RUU occupancy (insn's)
ruu_rate                     1.4348 # avg RUU dispatch rate (insn/cycle)
ruu_latency                 14.6423 # avg RUU occupant latency (cycle's)
ruu_full                     0.0046 # fraction of time (cycle's) RUU was full
LSQ_count                 679663852 # cumulative LSQ occupancy
LSQ_fcount                 31686757 # cumulative LSQ full count
lsq_occupancy                9.7520 # avg LSQ occupancy (insn's)
lsq_rate                     1.4348 # avg LSQ dispatch rate (insn/cycle)
lsq_latency                  6.7966 # avg LSQ occupant latency (cycle's)
lsq_full                     0.4547 # fraction of time (cycle's) LSQ was full
sim_slip                 2290053784 # total number of slip cycles
avg_sim_slip                22.9005 # the average slip between issue and retirement
il1.accesses              199671892 # total number of accesses
il1.hits                  198159749 # total number of hits
il1.misses                  1512143 # total number of misses
il1.replacements            1511887 # total number of replacements
il1.writebacks                    0 # total number of writebacks
il1.invalidations                 0 # total number of invalidations
il1.miss_rate                0.0076 # miss rate (i.e., misses/ref)
il1.repl_rate                0.0076 # replacement rate (i.e., repls/ref)
il1.wb_rate                  0.0000 # writeback rate (i.e., wrbks/ref)
il1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl1.accesses               45012370 # total number of accesses
dl1.hits                   44239635 # total number of hits
dl1.misses                   772735 # total number of misses
dl1.replacements             772479 # total number of replacements
dl1.writebacks               349557 # total number of writebacks
dl1.invalidations                 0 # total number of invalidations
dl1.miss_rate                0.0172 # miss rate (i.e., misses/ref)
dl1.repl_rate                0.0172 # replacement rate (i.e., repls/ref)
dl1.wb_rate                  0.0078 # writeback rate (i.e., wrbks/ref)
dl1.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
dl2.accesses                2634435 # total number of accesses
dl2.hits                    2133512 # total number of hits
dl2.misses                   500923 # total number of misses
dl2.replacements             498875 # total number of replacements
dl2.writebacks               106493 # total number of writebacks
dl2.invalidations                 0 # total number of invalidations
dl2.miss_rate                0.1901 # miss rate (i.e., misses/ref)
dl2.repl_rate                0.1894 # replacement rate (i.e., repls/ref)
dl2.wb_rate                  0.0404 # writeback rate (i.e., wrbks/ref)
dl2.inv_rate                 0.0000 # invalidation rate (i.e., invs/ref)
itlb.accesses             199671892 # total number of accesses
itlb.hits                 199669300 # total number of hits
itlb.misses                    2592 # total number of misses
itlb.replacements              2533 # total number of replacements
itlb.writebacks                   0 # total number of writebacks
itlb.invalidations                0 # total number of invalidations
itlb.miss_rate               0.0000 # miss rate (i.e., misses/ref)
itlb.repl_rate               0.0000 # replacement rate (i.e., repls/ref)
itlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
itlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
dtlb.accesses              46161577 # total number of accesses
dtlb.hits                  46134063 # total number of hits
dtlb.misses                   27514 # total number of misses
dtlb.replacements             27387 # total number of replacements
dtlb.writebacks                   0 # total number of writebacks
dtlb.invalidations                0 # total number of invalidations
dtlb.miss_rate               0.0006 # miss rate (i.e., misses/ref)
dtlb.repl_rate               0.0006 # replacement rate (i.e., repls/ref)
dtlb.wb_rate                 0.0000 # writeback rate (i.e., wrbks/ref)
dtlb.inv_rate                0.0000 # invalidation rate (i.e., invs/ref)
rename_power           227951526.6875 # total power usage of rename unit
bpred_power            198519912.1772 # total power usage of bpred unit
window_power           3011925325.1637 # total power usage of instruction window
lsq_power              325534980.8168 # total power usage of load/store queue
regfile_power          1752035445.5298 # total power usage of arch. regfile
icache_power           211360417.6418 # total power usage of icache
dcache_power           897513275.6496 # total power usage of dcache
dcache2_power          216260827.1754 # total power usage of dcache2
alu_power              2315410456.7263 # total power usage of alu
falu_power             1990624374.4114 # total power usage of falu
resultbus_power        2183401558.3632 # total power usage of resultbus
clock_power            4269786920.2367 # total power usage of clock
avg_rename_power             3.2707 # avg power usage of rename unit
avg_bpred_power              2.8484 # avg power usage of bpred unit
avg_window_power            43.2160 # avg power usage of instruction window
avg_lsq_power                4.6709 # avg power usage of lsq
avg_regfile_power           25.1387 # avg power usage of arch. regfile
avg_icache_power             3.0327 # avg power usage of icache
avg_dcache_power            12.8778 # avg power usage of dcache
avg_dcache2_power            3.1030 # avg power usage of dcache2
avg_alu_power               33.2222 # avg power usage of alu
avg_falu_power              28.5621 # avg power usage of falu
avg_resultbus_power         31.3281 # avg power usage of resultbus
avg_clock_power             61.2642 # avg power usage of clock
fetch_stage_power      409880329.8190 # total power usage of fetch stage
dispatch_stage_power   227951526.6875 # total power usage of dispatch stage
issue_stage_power      8950046423.8950 # total power usage of issue stage
avg_fetch_power              5.8811 # average power of fetch unit per cycle
avg_dispatch_power           3.2707 # average power of dispatch unit per cycle
avg_issue_power            128.4180 # average power of issue unit per cycle
total_power            15609700646.1680 # total power per cycle
avg_total_power_cycle      223.9728 # average total power per cycle
avg_total_power_cycle_nofp_nod2     192.3077 # average total power per cycle
avg_total_power_insn       156.0970 # average total power per insn
avg_total_power_insn_nofp_nod2     134.0282 # average total power per insn
rename_power_cc1       66706382.7520 # total power usage of rename unit_cc1
bpred_power_cc1              0.0000 # total power usage of bpred unit_cc1
window_power_cc1       1114338438.2932 # total power usage of instruction window_cc1
lsq_power_cc1          58207458.2590 # total power usage of lsq_cc1
regfile_power_cc1      570467059.4150 # total power usage of arch. regfile_cc1
icache_power_cc1       63329051.9945 # total power usage of icache_cc1
dcache_power_cc1       267439144.6594 # total power usage of dcache_cc1
dcache2_power_cc1      6769103.4895 # total power usage of dcache2_cc1
alu_power_cc1          130700724.6535 # total power usage of alu_cc1
resultbus_power_cc1    820709275.7696 # total power usage of resultbus_cc1
clock_power_cc1        1187837270.9318 # total power usage of clock_cc1
avg_rename_power_cc1         0.9571 # avg power usage of rename unit_cc1
avg_bpred_power_cc1          0.0000 # avg power usage of bpred unit_cc1
avg_window_power_cc1        15.9889 # avg power usage of instruction window_cc1
avg_lsq_power_cc1            0.8352 # avg power usage of lsq_cc1
avg_regfile_power_cc1        8.1852 # avg power usage of arch. regfile_cc1
avg_icache_power_cc1         0.9087 # avg power usage of icache_cc1
avg_dcache_power_cc1         3.8373 # avg power usage of dcache_cc1
avg_dcache2_power_cc1        0.0971 # avg power usage of dcache2_cc1
avg_alu_power_cc1            1.8753 # avg power usage of alu_cc1
avg_resultbus_power_cc1      11.7758 # avg power usage of resultbus_cc1
avg_clock_power_cc1         17.0435 # avg power usage of clock_cc1
fetch_stage_power_cc1  63329051.9945 # total power usage of fetch stage_cc1
dispatch_stage_power_cc1 66706382.7520 # total power usage of dispatch stage_cc1
issue_stage_power_cc1  2398164145.1243 # total power usage of issue stage_cc1
avg_fetch_power_cc1          0.9087 # average power of fetch unit per cycle_cc1
avg_dispatch_power_cc1       0.9571 # average power of dispatch unit per cycle_cc1
avg_issue_power_cc1         34.4096 # average power of issue unit per cycle_cc1
total_power_cycle_cc1  4286503910.2176 # total power per cycle_cc1
avg_total_power_cycle_cc1      61.5041 # average total power per cycle_cc1
avg_total_power_insn_cc1      42.8650 # average total power per insn_cc1
rename_power_cc2       20441990.9588 # total power usage of rename unit_cc2
bpred_power_cc2              0.0000 # total power usage of bpred unit_cc2
window_power_cc2       398035977.5335 # total power usage of instruction window_cc2
lsq_power_cc2          24709012.4692 # total power usage of lsq_cc2
regfile_power_cc2      58399964.4176 # total power usage of arch. regfile_cc2
icache_power_cc2       63329051.9945 # total power usage of icache_cc2
dcache_power_cc2       144915030.8755 # total power usage of dcache_cc2
dcache2_power_cc2      2043647.6531 # total power usage of dcache2_cc2
alu_power_cc2          116736861.2942 # total power usage of alu_cc2
resultbus_power_cc2    212335490.0971 # total power usage of resultbus_cc2
clock_power_cc2        399389952.2528 # total power usage of clock_cc2
avg_rename_power_cc2         0.2933 # avg power usage of rename unit_cc2
avg_bpred_power_cc2          0.0000 # avg power usage of bpred unit_cc2
avg_window_power_cc2         5.7111 # avg power usage of instruction window_cc2
avg_lsq_power_cc2            0.3545 # avg power usage of instruction lsq_cc2
avg_regfile_power_cc2        0.8379 # avg power usage of arch. regfile_cc2
avg_icache_power_cc2         0.9087 # avg power usage of icache_cc2
avg_dcache_power_cc2         2.0793 # avg power usage of dcache_cc2
avg_dcache2_power_cc2        0.0293 # avg power usage of dcache2_cc2
avg_alu_power_cc2            1.6750 # avg power usage of alu_cc2
avg_resultbus_power_cc2       3.0467 # avg power usage of resultbus_cc2
avg_clock_power_cc2          5.7306 # avg power usage of clock_cc2
fetch_stage_power_cc2  63329051.9945 # total power usage of fetch stage_cc2
dispatch_stage_power_cc2 20441990.9588 # total power usage of dispatch stage_cc2
issue_stage_power_cc2  898776019.9225 # total power usage of issue stage_cc2
avg_fetch_power_cc2          0.9087 # average power of fetch unit per cycle_cc2
avg_dispatch_power_cc2       0.2933 # average power of dispatch unit per cycle_cc2
avg_issue_power_cc2         12.8959 # average power of issue unit per cycle_cc2
total_power_cycle_cc2  1440336979.5462 # total power per cycle_cc2
avg_total_power_cycle_cc2      20.6664 # average total power per cycle_cc2
avg_total_power_insn_cc2      14.4034 # average total power per insn_cc2
rename_power_cc3       36566505.4162 # total power usage of rename unit_cc3
bpred_power_cc3        19851991.2163 # total power usage of bpred unit_cc3
window_power_cc3       575182612.4543 # total power usage of instruction window_cc3
lsq_power_cc3          51069391.1039 # total power usage of lsq_cc3
regfile_power_cc3      170089236.1155 # total power usage of arch. regfile_cc3
icache_power_cc3       78132188.6585 # total power usage of icache_cc3
dcache_power_cc3       208578039.7585 # total power usage of dcache_cc3
dcache2_power_cc3      22992922.7172 # total power usage of dcache2_cc3
alu_power_cc3          335207833.9731 # total power usage of alu_cc3
resultbus_power_cc3    343133322.6765 # total power usage of resultbus_cc3
clock_power_cc3        698265312.4620 # total power usage of clock_cc3
avg_rename_power_cc3         0.5247 # avg power usage of rename unit_cc3
avg_bpred_power_cc3          0.2848 # avg power usage of bpred unit_cc3
avg_window_power_cc3         8.2529 # avg power usage of instruction window_cc3
avg_lsq_power_cc3            0.7328 # avg power usage of instruction lsq_cc3
avg_regfile_power_cc3        2.4405 # avg power usage of arch. regfile_cc3
avg_icache_power_cc3         1.1211 # avg power usage of icache_cc3
avg_dcache_power_cc3         2.9927 # avg power usage of dcache_cc3
avg_dcache2_power_cc3        0.3299 # avg power usage of dcache2_cc3
avg_alu_power_cc3            4.8097 # avg power usage of alu_cc3
avg_resultbus_power_cc3       4.9234 # avg power usage of resultbus_cc3
avg_clock_power_cc3         10.0189 # avg power usage of clock_cc3
fetch_stage_power_cc3  97984179.8748 # total power usage of fetch stage_cc3
dispatch_stage_power_cc3 36566505.4162 # total power usage of dispatch stage_cc3
issue_stage_power_cc3  1536164122.6834 # total power usage of issue stage_cc3
avg_fetch_power_cc3          1.4059 # average power of fetch unit per cycle_cc3
avg_dispatch_power_cc3       0.5247 # average power of dispatch unit per cycle_cc3
avg_issue_power_cc3         22.0414 # average power of issue unit per cycle_cc3
total_power_cycle_cc3  2539069356.5520 # total power per cycle_cc3
avg_total_power_cycle_cc3      36.4313 # average total power per cycle_cc3
avg_total_power_insn_cc3      25.3907 # average total power per insn_cc3
total_rename_access       100000001 # total number accesses of rename unit
total_bpred_access                0 # total number accesses of bpred unit
total_window_access       377699374 # total number accesses of instruction window
total_lsq_access           47310784 # total number accesses of load/store queue
total_regfile_access      125295199 # total number accesses of arch. regfile
total_icache_access       199671892 # total number accesses of icache
total_dcache_access        45012370 # total number accesses of dcache
total_dcache2_access        2634435 # total number accesses of dcache2
total_alu_access           99999283 # total number accesses of alu
total_resultbus_access    115674336 # total number accesses of resultbus
avg_rename_access            1.4348 # avg number accesses of rename unit
avg_bpred_access             0.0000 # avg number accesses of bpred unit
avg_window_access            5.4193 # avg number accesses of instruction window
avg_lsq_access               0.6788 # avg number accesses of lsq
avg_regfile_access           1.7978 # avg number accesses of arch. regfile
avg_icache_access            2.8650 # avg number accesses of icache
avg_dcache_access            0.6459 # avg number accesses of dcache
avg_dcache2_access           0.0378 # avg number accesses of dcache2
avg_alu_access               1.4348 # avg number accesses of alu
avg_resultbus_access         1.6597 # avg number accesses of resultbus
max_rename_access                16 # max number accesses of rename unit
max_bpred_access                  0 # max number accesses of bpred unit
max_window_access                39 # max number accesses of instruction window
max_lsq_access                    9 # max number accesses of load/store queue
max_regfile_access               37 # max number accesses of arch. regfile
max_icache_access                16 # max number accesses of icache
max_dcache_access                 8 # max number accesses of dcache
max_dcache2_access                8 # max number accesses of dcache2
max_alu_access                    6 # max number accesses of alu
max_resultbus_access             12 # max number accesses of resultbus
max_cycle_power_cc1        173.2644 # maximum cycle power usage of cc1
max_cycle_power_cc2         86.6342 # maximum cycle power usage of cc2
max_cycle_power_cc3         94.3089 # maximum cycle power usage of cc3
sim_invalid_addrs                 0 # total non-speculative bogus addresses seen (debug var)
ld_text_base           0x0120000000 # program text (code) segment base
ld_text_size                 876544 # program text (code) size in bytes
ld_data_base           0x0140000000 # program initialized data segment base
ld_data_size                 131616 # program init'ed `.data' and uninit'ed `.bss' size in bytes
ld_stack_base          0x011ff9b000 # program stack segment base (highest address in stack)
ld_stack_size                 16384 # program initial stack size
ld_prog_entry          0x01200b4d58 # program entry point (initial PC)
ld_environ_base        0x011ff96b80 # program environment base address address
ld_target_big_endian              0 # target executable endian-ness, non-zero if big endian
mem.page_count                 4996 # total number of pages allocated
mem.page_mem                 39968k # total size of memory pages allocated
mem.ptab_misses              173706 # total first level page table misses
mem.ptab_accesses        1089648036 # total page table accesses
mem.ptab_miss_rate           0.0002 # first level page table miss rate

